var ds=Object.create;var fe=Object.defineProperty,ms=Object.defineProperties,gs=Object.getOwnPropertyDescriptor,fs=Object.getOwnPropertyDescriptors,hs=Object.getOwnPropertyNames,pr=Object.getOwnPropertySymbols,Ts=Object.getPrototypeOf,dr=Object.prototype.hasOwnProperty,Es=Object.prototype.propertyIsEnumerable;var mr=(e,r,t)=>r in e?fe(e,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[r]=t,gr=(e,r)=>{for(var t in r||(r={}))dr.call(r,t)&&mr(e,t,r[t]);if(pr)for(var t of pr(r))Es.call(r,t)&&mr(e,t,r[t]);return e},fr=(e,r)=>ms(e,fs(r)),bs=e=>fe(e,"__esModule",{value:!0});var g=(e,r)=>()=>(r||e((r={exports:{}}).exports,r),r.exports);var ws=(e,r,t)=>{if(r&&typeof r=="object"||typeof r=="function")for(let s of hs(r))!dr.call(e,s)&&s!=="default"&&fe(e,s,{get:()=>r[s],enumerable:!(t=gs(r,s))||t.enumerable});return e},Re=e=>ws(bs(fe(e!=null?ds(Ts(e)):{},"default",e&&e.__esModule&&"default"in e?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e);var he=g(J=>{"use strict";Object.defineProperty(J,"__esModule",{value:!0});J.toCommandProperties=J.toCommandValue=void 0;function _s(e){return e==null?"":typeof e=="string"||e instanceof String?e:JSON.stringify(e)}J.toCommandValue=_s;function ys(e){return Object.keys(e).length?{title:e.title,line:e.startLine,endLine:e.endLine,col:e.startColumn,endColumn:e.endColumn}:{}}J.toCommandProperties=ys});var wr=g(k=>{"use strict";var vs=k&&k.__createBinding||(Object.create?function(e,r,t,s){s===void 0&&(s=t),Object.defineProperty(e,s,{enumerable:!0,get:function(){return r[t]}})}:function(e,r,t,s){s===void 0&&(s=t),e[s]=r[t]}),Gs=k&&k.__setModuleDefault||(Object.create?function(e,r){Object.defineProperty(e,"default",{enumerable:!0,value:r})}:function(e,r){e.default=r}),Ps=k&&k.__importStar||function(e){if(e&&e.__esModule)return e;var r={};if(e!=null)for(var t in e)t!=="default"&&Object.hasOwnProperty.call(e,t)&&vs(r,e,t);return Gs(r,e),r};Object.defineProperty(k,"__esModule",{value:!0});k.issue=k.issueCommand=void 0;var Os=Ps(require("os")),hr=he();function Tr(e,r,t){let s=new br(e,r,t);process.stdout.write(s.toString()+Os.EOL)}k.issueCommand=Tr;function ks(e,r=""){Tr(e,{},r)}k.issue=ks;var Er="::",br=class{constructor(r,t,s){r||(r="missing.command"),this.command=r,this.properties=t,this.message=s}toString(){let r=Er+this.command;if(this.properties&&Object.keys(this.properties).length>0){r+=" ";let t=!0;for(let s in this.properties)if(this.properties.hasOwnProperty(s)){let o=this.properties[s];o&&(t?t=!1:r+=",",r+=`${s}=${Ss(o)}`)}}return r+=`${Er}${As(this.message)}`,r}};function As(e){return hr.toCommandValue(e).replace(/%/g,"%25").replace(/\r/g,"%0D").replace(/\n/g,"%0A")}function Ss(e){return hr.toCommandValue(e).replace(/%/g,"%25").replace(/\r/g,"%0D").replace(/\n/g,"%0A").replace(/:/g,"%3A").replace(/,/g,"%2C")}});var vr=g(F=>{"use strict";var Rs=F&&F.__createBinding||(Object.create?function(e,r,t,s){s===void 0&&(s=t),Object.defineProperty(e,s,{enumerable:!0,get:function(){return r[t]}})}:function(e,r,t,s){s===void 0&&(s=t),e[s]=r[t]}),Us=F&&F.__setModuleDefault||(Object.create?function(e,r){Object.defineProperty(e,"default",{enumerable:!0,value:r})}:function(e,r){e.default=r}),_r=F&&F.__importStar||function(e){if(e&&e.__esModule)return e;var r={};if(e!=null)for(var t in e)t!=="default"&&Object.hasOwnProperty.call(e,t)&&Rs(r,e,t);return Us(r,e),r};Object.defineProperty(F,"__esModule",{value:!0});F.issueCommand=void 0;var yr=_r(require("fs")),Cs=_r(require("os")),Fs=he();function Ds(e,r){let t=process.env[`GITHUB_${e}`];if(!t)throw new Error(`Unable to find environment variable for file command ${e}`);if(!yr.existsSync(t))throw new Error(`Missing file at path: ${t}`);yr.appendFileSync(t,`${Fs.toCommandValue(r)}${Cs.EOL}`,{encoding:"utf8"})}F.issueCommand=Ds});var Rr=g(p=>{"use strict";var js=p&&p.__createBinding||(Object.create?function(e,r,t,s){s===void 0&&(s=t),Object.defineProperty(e,s,{enumerable:!0,get:function(){return r[t]}})}:function(e,r,t,s){s===void 0&&(s=t),e[s]=r[t]}),qs=p&&p.__setModuleDefault||(Object.create?function(e,r){Object.defineProperty(e,"default",{enumerable:!0,value:r})}:function(e,r){e.default=r}),Gr=p&&p.__importStar||function(e){if(e&&e.__esModule)return e;var r={};if(e!=null)for(var t in e)t!=="default"&&Object.hasOwnProperty.call(e,t)&&js(r,e,t);return qs(r,e),r},Ls=p&&p.__awaiter||function(e,r,t,s){function o(n){return n instanceof t?n:new t(function(i){i(n)})}return new(t||(t=Promise))(function(n,i){function a(l){try{u(s.next(l))}catch(d){i(d)}}function c(l){try{u(s.throw(l))}catch(d){i(d)}}function u(l){l.done?n(l.value):o(l.value).then(a,c)}u((s=s.apply(e,r||[])).next())})};Object.defineProperty(p,"__esModule",{value:!0});p.getState=p.saveState=p.group=p.endGroup=p.startGroup=p.info=p.notice=p.warning=p.error=p.debug=p.isDebug=p.setFailed=p.setCommandEcho=p.setOutput=p.getBooleanInput=p.getMultilineInput=p.getInput=p.addPath=p.setSecret=p.exportVariable=p.ExitCode=void 0;var A=wr(),Pr=vr(),Te=he(),Ee=Gr(require("os")),Is=Gr(require("path")),Or;(function(e){e[e.Success=0]="Success",e[e.Failure=1]="Failure"})(Or=p.ExitCode||(p.ExitCode={}));function Bs(e,r){let t=Te.toCommandValue(r);if(process.env[e]=t,process.env.GITHUB_ENV||""){let o="_GitHubActionsFileCommandDelimeter_",n=`${e}<<${o}${Ee.EOL}${t}${Ee.EOL}${o}`;Pr.issueCommand("ENV",n)}else A.issueCommand("set-env",{name:e},t)}p.exportVariable=Bs;function xs(e){A.issueCommand("add-mask",{},e)}p.setSecret=xs;function $s(e){process.env.GITHUB_PATH||""?Pr.issueCommand("PATH",e):A.issueCommand("add-path",{},e),process.env.PATH=`${e}${Is.delimiter}${process.env.PATH}`}p.addPath=$s;function Ue(e,r){let t=process.env[`INPUT_${e.replace(/ /g,"_").toUpperCase()}`]||"";if(r&&r.required&&!t)throw new Error(`Input required and not supplied: ${e}`);return r&&r.trimWhitespace===!1?t:t.trim()}p.getInput=Ue;function Ms(e,r){return Ue(e,r).split(`
`).filter(s=>s!=="")}p.getMultilineInput=Ms;function Hs(e,r){let t=["true","True","TRUE"],s=["false","False","FALSE"],o=Ue(e,r);if(t.includes(o))return!0;if(s.includes(o))return!1;throw new TypeError(`Input does not meet YAML 1.2 "Core Schema" specification: ${e}
Support boolean input list: \`true | True | TRUE | false | False | FALSE\``)}p.getBooleanInput=Hs;function Ns(e,r){process.stdout.write(Ee.EOL),A.issueCommand("set-output",{name:e},r)}p.setOutput=Ns;function zs(e){A.issue("echo",e?"on":"off")}p.setCommandEcho=zs;function Ws(e){process.exitCode=Or.Failure,kr(e)}p.setFailed=Ws;function Vs(){return process.env.RUNNER_DEBUG==="1"}p.isDebug=Vs;function Ks(e){A.issueCommand("debug",{},e)}p.debug=Ks;function kr(e,r={}){A.issueCommand("error",Te.toCommandProperties(r),e instanceof Error?e.toString():e)}p.error=kr;function Js(e,r={}){A.issueCommand("warning",Te.toCommandProperties(r),e instanceof Error?e.toString():e)}p.warning=Js;function Ys(e,r={}){A.issueCommand("notice",Te.toCommandProperties(r),e instanceof Error?e.toString():e)}p.notice=Ys;function Zs(e){process.stdout.write(e+Ee.EOL)}p.info=Zs;function Ar(e){A.issue("group",e)}p.startGroup=Ar;function Sr(){A.issue("endgroup")}p.endGroup=Sr;function Xs(e,r){return Ls(this,void 0,void 0,function*(){Ar(e);let t;try{t=yield r()}finally{Sr()}return t})}p.group=Xs;function Qs(e,r){A.issueCommand("save-state",{name:e},r)}p.saveState=Qs;function eo(e){return process.env[`STATE_${e}`]||""}p.getState=eo});var Ce=g(be=>{"use strict";Object.defineProperty(be,"__esModule",{value:!0});be.Context=void 0;var Ur=require("fs"),ro=require("os"),Cr=class{constructor(){var r,t,s;if(this.payload={},process.env.GITHUB_EVENT_PATH)if(Ur.existsSync(process.env.GITHUB_EVENT_PATH))this.payload=JSON.parse(Ur.readFileSync(process.env.GITHUB_EVENT_PATH,{encoding:"utf8"}));else{let o=process.env.GITHUB_EVENT_PATH;process.stdout.write(`GITHUB_EVENT_PATH ${o} does not exist${ro.EOL}`)}this.eventName=process.env.GITHUB_EVENT_NAME,this.sha=process.env.GITHUB_SHA,this.ref=process.env.GITHUB_REF,this.workflow=process.env.GITHUB_WORKFLOW,this.action=process.env.GITHUB_ACTION,this.actor=process.env.GITHUB_ACTOR,this.job=process.env.GITHUB_JOB,this.runNumber=parseInt(process.env.GITHUB_RUN_NUMBER,10),this.runId=parseInt(process.env.GITHUB_RUN_ID,10),this.apiUrl=(r=process.env.GITHUB_API_URL)!==null&&r!==void 0?r:"https://api.github.com",this.serverUrl=(t=process.env.GITHUB_SERVER_URL)!==null&&t!==void 0?t:"https://github.com",this.graphqlUrl=(s=process.env.GITHUB_GRAPHQL_URL)!==null&&s!==void 0?s:"https://api.github.com/graphql"}get issue(){let r=this.payload;return Object.assign(Object.assign({},this.repo),{number:(r.issue||r.pull_request||r).number})}get repo(){if(process.env.GITHUB_REPOSITORY){let[r,t]=process.env.GITHUB_REPOSITORY.split("/");return{owner:r,repo:t}}if(this.payload.repository)return{owner:this.payload.repository.owner.login,repo:this.payload.repository.name};throw new Error("context.repo requires a GITHUB_REPOSITORY environment variable like 'owner/repo'")}};be.Context=Cr});var Dr=g(we=>{"use strict";Object.defineProperty(we,"__esModule",{value:!0});function to(e){let r=e.protocol==="https:",t;if(Fr(e))return t;let s;return r?s=process.env.https_proxy||process.env.HTTPS_PROXY:s=process.env.http_proxy||process.env.HTTP_PROXY,s&&(t=new URL(s)),t}we.getProxyUrl=to;function Fr(e){if(!e.hostname)return!1;let r=process.env.no_proxy||process.env.NO_PROXY||"";if(!r)return!1;let t;e.port?t=Number(e.port):e.protocol==="http:"?t=80:e.protocol==="https:"&&(t=443);let s=[e.hostname.toUpperCase()];typeof t=="number"&&s.push(`${s[0]}:${t}`);for(let o of r.split(",").map(n=>n.trim().toUpperCase()).filter(n=>n))if(s.some(n=>n===o))return!0;return!1}we.checkBypass=Fr});var Ir=g(Y=>{"use strict";var di=require("net"),so=require("tls"),Fe=require("http"),jr=require("https"),oo=require("events"),mi=require("assert"),no=require("util");Y.httpOverHttp=io;Y.httpsOverHttp=ao;Y.httpOverHttps=co;Y.httpsOverHttps=uo;function io(e){var r=new j(e);return r.request=Fe.request,r}function ao(e){var r=new j(e);return r.request=Fe.request,r.createSocket=qr,r.defaultPort=443,r}function co(e){var r=new j(e);return r.request=jr.request,r}function uo(e){var r=new j(e);return r.request=jr.request,r.createSocket=qr,r.defaultPort=443,r}function j(e){var r=this;r.options=e||{},r.proxyOptions=r.options.proxy||{},r.maxSockets=r.options.maxSockets||Fe.Agent.defaultMaxSockets,r.requests=[],r.sockets=[],r.on("free",function(s,o,n,i){for(var a=Lr(o,n,i),c=0,u=r.requests.length;c<u;++c){var l=r.requests[c];if(l.host===a.host&&l.port===a.port){r.requests.splice(c,1),l.request.onSocket(s);return}}s.destroy(),r.removeSocket(s)})}no.inherits(j,oo.EventEmitter);j.prototype.addRequest=function(r,t,s,o){var n=this,i=De({request:r},n.options,Lr(t,s,o));if(n.sockets.length>=this.maxSockets){n.requests.push(i);return}n.createSocket(i,function(a){a.on("free",c),a.on("close",u),a.on("agentRemove",u),r.onSocket(a);function c(){n.emit("free",a,i)}function u(l){n.removeSocket(a),a.removeListener("free",c),a.removeListener("close",u),a.removeListener("agentRemove",u)}})};j.prototype.createSocket=function(r,t){var s=this,o={};s.sockets.push(o);var n=De({},s.proxyOptions,{method:"CONNECT",path:r.host+":"+r.port,agent:!1,headers:{host:r.host+":"+r.port}});r.localAddress&&(n.localAddress=r.localAddress),n.proxyAuth&&(n.headers=n.headers||{},n.headers["Proxy-Authorization"]="Basic "+new Buffer(n.proxyAuth).toString("base64")),$("making CONNECT request");var i=s.request(n);i.useChunkedEncodingByDefault=!1,i.once("response",a),i.once("upgrade",c),i.once("connect",u),i.once("error",l),i.end();function a(d){d.upgrade=!0}function c(d,m,b){process.nextTick(function(){u(d,m,b)})}function u(d,m,b){if(i.removeAllListeners(),m.removeAllListeners(),d.statusCode!==200){$("tunneling socket could not be established, statusCode=%d",d.statusCode),m.destroy();var f=new Error("tunneling socket could not be established, statusCode="+d.statusCode);f.code="ECONNRESET",r.request.emit("error",f),s.removeSocket(o);return}if(b.length>0){$("got illegal response body from proxy"),m.destroy();var f=new Error("got illegal response body from proxy");f.code="ECONNRESET",r.request.emit("error",f),s.removeSocket(o);return}return $("tunneling connection has established"),s.sockets[s.sockets.indexOf(o)]=m,t(m)}function l(d){i.removeAllListeners(),$(`tunneling socket could not be established, cause=%s
`,d.message,d.stack);var m=new Error("tunneling socket could not be established, cause="+d.message);m.code="ECONNRESET",r.request.emit("error",m),s.removeSocket(o)}};j.prototype.removeSocket=function(r){var t=this.sockets.indexOf(r);if(t!==-1){this.sockets.splice(t,1);var s=this.requests.shift();s&&this.createSocket(s,function(o){s.request.onSocket(o)})}};function qr(e,r){var t=this;j.prototype.createSocket.call(t,e,function(s){var o=e.request.getHeader("host"),n=De({},t.options,{socket:s,servername:o?o.replace(/:.*$/,""):e.host}),i=so.connect(0,n);t.sockets[t.sockets.indexOf(s)]=i,r(i)})}function Lr(e,r,t){return typeof e=="string"?{host:e,port:r,localAddress:t}:e}function De(e){for(var r=1,t=arguments.length;r<t;++r){var s=arguments[r];if(typeof s=="object")for(var o=Object.keys(s),n=0,i=o.length;n<i;++n){var a=o[n];s[a]!==void 0&&(e[a]=s[a])}}return e}var $;process.env.NODE_DEBUG&&/\btunnel\b/.test(process.env.NODE_DEBUG)?$=function(){var e=Array.prototype.slice.call(arguments);typeof e[0]=="string"?e[0]="TUNNEL: "+e[0]:e.unshift("TUNNEL:"),console.error.apply(console,e)}:$=function(){};Y.debug=$});var xr=g((fi,Br)=>{Br.exports=Ir()});var Mr=g(P=>{"use strict";Object.defineProperty(P,"__esModule",{value:!0});var _e=require("http"),je=require("https"),$r=Dr(),Z,U;(function(e){e[e.OK=200]="OK",e[e.MultipleChoices=300]="MultipleChoices",e[e.MovedPermanently=301]="MovedPermanently",e[e.ResourceMoved=302]="ResourceMoved",e[e.SeeOther=303]="SeeOther",e[e.NotModified=304]="NotModified",e[e.UseProxy=305]="UseProxy",e[e.SwitchProxy=306]="SwitchProxy",e[e.TemporaryRedirect=307]="TemporaryRedirect",e[e.PermanentRedirect=308]="PermanentRedirect",e[e.BadRequest=400]="BadRequest",e[e.Unauthorized=401]="Unauthorized",e[e.PaymentRequired=402]="PaymentRequired",e[e.Forbidden=403]="Forbidden",e[e.NotFound=404]="NotFound",e[e.MethodNotAllowed=405]="MethodNotAllowed",e[e.NotAcceptable=406]="NotAcceptable",e[e.ProxyAuthenticationRequired=407]="ProxyAuthenticationRequired",e[e.RequestTimeout=408]="RequestTimeout",e[e.Conflict=409]="Conflict",e[e.Gone=410]="Gone",e[e.TooManyRequests=429]="TooManyRequests",e[e.InternalServerError=500]="InternalServerError",e[e.NotImplemented=501]="NotImplemented",e[e.BadGateway=502]="BadGateway",e[e.ServiceUnavailable=503]="ServiceUnavailable",e[e.GatewayTimeout=504]="GatewayTimeout"})(U=P.HttpCodes||(P.HttpCodes={}));var _;(function(e){e.Accept="accept",e.ContentType="content-type"})(_=P.Headers||(P.Headers={}));var M;(function(e){e.ApplicationJson="application/json"})(M=P.MediaTypes||(P.MediaTypes={}));function lo(e){let r=$r.getProxyUrl(new URL(e));return r?r.href:""}P.getProxyUrl=lo;var po=[U.MovedPermanently,U.ResourceMoved,U.SeeOther,U.TemporaryRedirect,U.PermanentRedirect],mo=[U.BadGateway,U.ServiceUnavailable,U.GatewayTimeout],go=["OPTIONS","GET","DELETE","HEAD"],fo=10,ho=5,ne=class extends Error{constructor(r,t){super(r);this.name="HttpClientError",this.statusCode=t,Object.setPrototypeOf(this,ne.prototype)}};P.HttpClientError=ne;var qe=class{constructor(r){this.message=r}readBody(){return new Promise(async(r,t)=>{let s=Buffer.alloc(0);this.message.on("data",o=>{s=Buffer.concat([s,o])}),this.message.on("end",()=>{r(s.toString())})})}};P.HttpClientResponse=qe;function To(e){return new URL(e).protocol==="https:"}P.isHttps=To;var ye=class{constructor(r,t,s){this._ignoreSslError=!1,this._allowRedirects=!0,this._allowRedirectDowngrade=!1,this._maxRedirects=50,this._allowRetries=!1,this._maxRetries=1,this._keepAlive=!1,this._disposed=!1,this.userAgent=r,this.handlers=t||[],this.requestOptions=s,s&&(s.ignoreSslError!=null&&(this._ignoreSslError=s.ignoreSslError),this._socketTimeout=s.socketTimeout,s.allowRedirects!=null&&(this._allowRedirects=s.allowRedirects),s.allowRedirectDowngrade!=null&&(this._allowRedirectDowngrade=s.allowRedirectDowngrade),s.maxRedirects!=null&&(this._maxRedirects=Math.max(s.maxRedirects,0)),s.keepAlive!=null&&(this._keepAlive=s.keepAlive),s.allowRetries!=null&&(this._allowRetries=s.allowRetries),s.maxRetries!=null&&(this._maxRetries=s.maxRetries))}options(r,t){return this.request("OPTIONS",r,null,t||{})}get(r,t){return this.request("GET",r,null,t||{})}del(r,t){return this.request("DELETE",r,null,t||{})}post(r,t,s){return this.request("POST",r,t,s||{})}patch(r,t,s){return this.request("PATCH",r,t,s||{})}put(r,t,s){return this.request("PUT",r,t,s||{})}head(r,t){return this.request("HEAD",r,null,t||{})}sendStream(r,t,s,o){return this.request(r,t,s,o)}async getJson(r,t={}){t[_.Accept]=this._getExistingOrDefaultHeader(t,_.Accept,M.ApplicationJson);let s=await this.get(r,t);return this._processResponse(s,this.requestOptions)}async postJson(r,t,s={}){let o=JSON.stringify(t,null,2);s[_.Accept]=this._getExistingOrDefaultHeader(s,_.Accept,M.ApplicationJson),s[_.ContentType]=this._getExistingOrDefaultHeader(s,_.ContentType,M.ApplicationJson);let n=await this.post(r,o,s);return this._processResponse(n,this.requestOptions)}async putJson(r,t,s={}){let o=JSON.stringify(t,null,2);s[_.Accept]=this._getExistingOrDefaultHeader(s,_.Accept,M.ApplicationJson),s[_.ContentType]=this._getExistingOrDefaultHeader(s,_.ContentType,M.ApplicationJson);let n=await this.put(r,o,s);return this._processResponse(n,this.requestOptions)}async patchJson(r,t,s={}){let o=JSON.stringify(t,null,2);s[_.Accept]=this._getExistingOrDefaultHeader(s,_.Accept,M.ApplicationJson),s[_.ContentType]=this._getExistingOrDefaultHeader(s,_.ContentType,M.ApplicationJson);let n=await this.patch(r,o,s);return this._processResponse(n,this.requestOptions)}async request(r,t,s,o){if(this._disposed)throw new Error("Client has already been disposed.");let n=new URL(t),i=this._prepareRequest(r,n,o),a=this._allowRetries&&go.indexOf(r)!=-1?this._maxRetries+1:1,c=0,u;for(;c<a;){if(u=await this.requestRaw(i,s),u&&u.message&&u.message.statusCode===U.Unauthorized){let d;for(let m=0;m<this.handlers.length;m++)if(this.handlers[m].canHandleAuthentication(u)){d=this.handlers[m];break}return d?d.handleAuthentication(this,i,s):u}let l=this._maxRedirects;for(;po.indexOf(u.message.statusCode)!=-1&&this._allowRedirects&&l>0;){let d=u.message.headers.location;if(!d)break;let m=new URL(d);if(n.protocol=="https:"&&n.protocol!=m.protocol&&!this._allowRedirectDowngrade)throw new Error("Redirect from HTTPS to HTTP protocol. This downgrade is not allowed for security reasons. If you want to allow this behavior, set the allowRedirectDowngrade option to true.");if(await u.readBody(),m.hostname!==n.hostname)for(let b in o)b.toLowerCase()==="authorization"&&delete o[b];i=this._prepareRequest(r,m,o),u=await this.requestRaw(i,s),l--}if(mo.indexOf(u.message.statusCode)==-1)return u;c+=1,c<a&&(await u.readBody(),await this._performExponentialBackoff(c))}return u}dispose(){this._agent&&this._agent.destroy(),this._disposed=!0}requestRaw(r,t){return new Promise((s,o)=>{let n=function(i,a){i&&o(i),s(a)};this.requestRawWithCallback(r,t,n)})}requestRawWithCallback(r,t,s){let o;typeof t=="string"&&(r.options.headers["Content-Length"]=Buffer.byteLength(t,"utf8"));let n=!1,i=(c,u)=>{n||(n=!0,s(c,u))},a=r.httpModule.request(r.options,c=>{let u=new qe(c);i(null,u)});a.on("socket",c=>{o=c}),a.setTimeout(this._socketTimeout||3*6e4,()=>{o&&o.end(),i(new Error("Request timeout: "+r.options.path),null)}),a.on("error",function(c){i(c,null)}),t&&typeof t=="string"&&a.write(t,"utf8"),t&&typeof t!="string"?(t.on("close",function(){a.end()}),t.pipe(a)):a.end()}getAgent(r){let t=new URL(r);return this._getAgent(t)}_prepareRequest(r,t,s){let o={};o.parsedUrl=t;let n=o.parsedUrl.protocol==="https:";o.httpModule=n?je:_e;let i=n?443:80;return o.options={},o.options.host=o.parsedUrl.hostname,o.options.port=o.parsedUrl.port?parseInt(o.parsedUrl.port):i,o.options.path=(o.parsedUrl.pathname||"")+(o.parsedUrl.search||""),o.options.method=r,o.options.headers=this._mergeHeaders(s),this.userAgent!=null&&(o.options.headers["user-agent"]=this.userAgent),o.options.agent=this._getAgent(o.parsedUrl),this.handlers&&this.handlers.forEach(a=>{a.prepareRequest(o.options)}),o}_mergeHeaders(r){let t=s=>Object.keys(s).reduce((o,n)=>(o[n.toLowerCase()]=s[n],o),{});return this.requestOptions&&this.requestOptions.headers?Object.assign({},t(this.requestOptions.headers),t(r)):t(r||{})}_getExistingOrDefaultHeader(r,t,s){let o=i=>Object.keys(i).reduce((a,c)=>(a[c.toLowerCase()]=i[c],a),{}),n;return this.requestOptions&&this.requestOptions.headers&&(n=o(this.requestOptions.headers)[t]),r[t]||n||s}_getAgent(r){let t,s=$r.getProxyUrl(r),o=s&&s.hostname;if(this._keepAlive&&o&&(t=this._proxyAgent),this._keepAlive&&!o&&(t=this._agent),t)return t;let n=r.protocol==="https:",i=100;if(this.requestOptions&&(i=this.requestOptions.maxSockets||_e.globalAgent.maxSockets),o){Z||(Z=xr());let a={maxSockets:i,keepAlive:this._keepAlive,proxy:fr(gr({},(s.username||s.password)&&{proxyAuth:`${s.username}:${s.password}`}),{host:s.hostname,port:s.port})},c,u=s.protocol==="https:";n?c=u?Z.httpsOverHttps:Z.httpsOverHttp:c=u?Z.httpOverHttps:Z.httpOverHttp,t=c(a),this._proxyAgent=t}if(this._keepAlive&&!t){let a={keepAlive:this._keepAlive,maxSockets:i};t=n?new je.Agent(a):new _e.Agent(a),this._agent=t}return t||(t=n?je.globalAgent:_e.globalAgent),n&&this._ignoreSslError&&(t.options=Object.assign(t.options||{},{rejectUnauthorized:!1})),t}_performExponentialBackoff(r){r=Math.min(fo,r);let t=ho*Math.pow(2,r);return new Promise(s=>setTimeout(()=>s(),t))}static dateTimeDeserializer(r,t){if(typeof t=="string"){let s=new Date(t);if(!isNaN(s.valueOf()))return s}return t}async _processResponse(r,t){return new Promise(async(s,o)=>{let n=r.message.statusCode,i={statusCode:n,result:null,headers:{}};n==U.NotFound&&s(i);let a,c;try{c=await r.readBody(),c&&c.length>0&&(t&&t.deserializeDates?a=JSON.parse(c,ye.dateTimeDeserializer):a=JSON.parse(c),i.result=a),i.headers=r.message.headers}catch(u){}if(n>299){let u;a&&a.message?u=a.message:c&&c.length>0?u=c:u="Failed request: ("+n+")";let l=new ne(u,n);l.result=i.result,o(l)}else s(i)})}};P.HttpClient=ye});var Hr=g(y=>{"use strict";var Eo=y&&y.__createBinding||(Object.create?function(e,r,t,s){s===void 0&&(s=t),Object.defineProperty(e,s,{enumerable:!0,get:function(){return r[t]}})}:function(e,r,t,s){s===void 0&&(s=t),e[s]=r[t]}),bo=y&&y.__setModuleDefault||(Object.create?function(e,r){Object.defineProperty(e,"default",{enumerable:!0,value:r})}:function(e,r){e.default=r}),wo=y&&y.__importStar||function(e){if(e&&e.__esModule)return e;var r={};if(e!=null)for(var t in e)t!=="default"&&Object.hasOwnProperty.call(e,t)&&Eo(r,e,t);return bo(r,e),r};Object.defineProperty(y,"__esModule",{value:!0});y.getApiBaseUrl=y.getProxyAgent=y.getAuthString=void 0;var _o=wo(Mr());function yo(e,r){if(!e&&!r.auth)throw new Error("Parameter token or opts.auth is required");if(e&&r.auth)throw new Error("Parameters token and opts.auth may not both be specified");return typeof r.auth=="string"?r.auth:`token ${e}`}y.getAuthString=yo;function vo(e){return new _o.HttpClient().getAgent(e)}y.getProxyAgent=vo;function Go(){return process.env.GITHUB_API_URL||"https://api.github.com"}y.getApiBaseUrl=Go});var ie=g(Le=>{"use strict";Object.defineProperty(Le,"__esModule",{value:!0});function Po(){return typeof navigator=="object"&&"userAgent"in navigator?navigator.userAgent:typeof process=="object"&&"version"in process?`Node.js/${process.version.substr(1)} (${process.platform}; ${process.arch})`:"<environment undetectable>"}Le.getUserAgent=Po});var Wr=g((bi,zr)=>{zr.exports=Nr;function Nr(e,r,t,s){if(typeof t!="function")throw new Error("method for before hook must be a function");return s||(s={}),Array.isArray(r)?r.reverse().reduce(function(o,n){return Nr.bind(null,e,n,o,s)},t)():Promise.resolve().then(function(){return e.registry[r]?e.registry[r].reduce(function(o,n){return n.hook.bind(null,o,s)},t)():t(s)})}});var Kr=g((wi,Vr)=>{Vr.exports=Oo;function Oo(e,r,t,s){var o=s;e.registry[t]||(e.registry[t]=[]),r==="before"&&(s=function(n,i){return Promise.resolve().then(o.bind(null,i)).then(n.bind(null,i))}),r==="after"&&(s=function(n,i){var a;return Promise.resolve().then(n.bind(null,i)).then(function(c){return a=c,o(a,i)}).then(function(){return a})}),r==="error"&&(s=function(n,i){return Promise.resolve().then(n.bind(null,i)).catch(function(a){return o(a,i)})}),e.registry[t].push({hook:s,orig:o})}});var Yr=g((_i,Jr)=>{Jr.exports=ko;function ko(e,r,t){if(!!e.registry[r]){var s=e.registry[r].map(function(o){return o.orig}).indexOf(t);s!==-1&&e.registry[r].splice(s,1)}}});var st=g((yi,ae)=>{var Zr=Wr(),Ao=Kr(),So=Yr(),Xr=Function.bind,Qr=Xr.bind(Xr);function et(e,r,t){var s=Qr(So,null).apply(null,t?[r,t]:[r]);e.api={remove:s},e.remove=s,["before","error","after","wrap"].forEach(function(o){var n=t?[r,o,t]:[r,o];e[o]=e.api[o]=Qr(Ao,null).apply(null,n)})}function Ro(){var e="h",r={registry:{}},t=Zr.bind(null,r,e);return et(t,r,e),t}function rt(){var e={registry:{}},r=Zr.bind(null,e);return et(r,e),r}var tt=!1;function X(){return tt||(console.warn('[before-after-hook]: "Hook()" repurposing warning, use "Hook.Collection()". Read more: https://git.io/upgrade-before-after-hook-to-1.4'),tt=!0),rt()}X.Singular=Ro.bind();X.Collection=rt.bind();ae.exports=X;ae.exports.Hook=X;ae.exports.Singular=X.Singular;ae.exports.Collection=X.Collection});var Be=g(Ie=>{"use strict";Object.defineProperty(Ie,"__esModule",{value:!0});function ot(e){return Object.prototype.toString.call(e)==="[object Object]"}function Uo(e){var r,t;return ot(e)===!1?!1:(r=e.constructor,r===void 0?!0:(t=r.prototype,!(ot(t)===!1||t.hasOwnProperty("isPrototypeOf")===!1)))}Ie.isPlainObject=Uo});var pt=g(Me=>{"use strict";Object.defineProperty(Me,"__esModule",{value:!0});var Co=Be(),Fo=ie();function Do(e){return e?Object.keys(e).reduce((r,t)=>(r[t.toLowerCase()]=e[t],r),{}):{}}function nt(e,r){let t=Object.assign({},e);return Object.keys(r).forEach(s=>{Co.isPlainObject(r[s])?s in e?t[s]=nt(e[s],r[s]):Object.assign(t,{[s]:r[s]}):Object.assign(t,{[s]:r[s]})}),t}function it(e){for(let r in e)e[r]===void 0&&delete e[r];return e}function xe(e,r,t){if(typeof r=="string"){let[o,n]=r.split(" ");t=Object.assign(n?{method:o,url:n}:{url:o},t)}else t=Object.assign({},r);t.headers=Do(t.headers),it(t),it(t.headers);let s=nt(e||{},t);return e&&e.mediaType.previews.length&&(s.mediaType.previews=e.mediaType.previews.filter(o=>!s.mediaType.previews.includes(o)).concat(s.mediaType.previews)),s.mediaType.previews=s.mediaType.previews.map(o=>o.replace(/-preview/,"")),s}function jo(e,r){let t=/\?/.test(e)?"&":"?",s=Object.keys(r);return s.length===0?e:e+t+s.map(o=>o==="q"?"q="+r.q.split("+").map(encodeURIComponent).join("+"):`${o}=${encodeURIComponent(r[o])}`).join("&")}var qo=/\{[^}]+\}/g;function Lo(e){return e.replace(/^\W+|\W+$/g,"").split(/,/)}function Io(e){let r=e.match(qo);return r?r.map(Lo).reduce((t,s)=>t.concat(s),[]):[]}function at(e,r){return Object.keys(e).filter(t=>!r.includes(t)).reduce((t,s)=>(t[s]=e[s],t),{})}function ct(e){return e.split(/(%[0-9A-Fa-f]{2})/g).map(function(r){return/%[0-9A-Fa-f]/.test(r)||(r=encodeURI(r).replace(/%5B/g,"[").replace(/%5D/g,"]")),r}).join("")}function Q(e){return encodeURIComponent(e).replace(/[!'()*]/g,function(r){return"%"+r.charCodeAt(0).toString(16).toUpperCase()})}function ce(e,r,t){return r=e==="+"||e==="#"?ct(r):Q(r),t?Q(t)+"="+r:r}function ee(e){return e!=null}function $e(e){return e===";"||e==="&"||e==="?"}function Bo(e,r,t,s){var o=e[t],n=[];if(ee(o)&&o!=="")if(typeof o=="string"||typeof o=="number"||typeof o=="boolean")o=o.toString(),s&&s!=="*"&&(o=o.substring(0,parseInt(s,10))),n.push(ce(r,o,$e(r)?t:""));else if(s==="*")Array.isArray(o)?o.filter(ee).forEach(function(i){n.push(ce(r,i,$e(r)?t:""))}):Object.keys(o).forEach(function(i){ee(o[i])&&n.push(ce(r,o[i],i))});else{let i=[];Array.isArray(o)?o.filter(ee).forEach(function(a){i.push(ce(r,a))}):Object.keys(o).forEach(function(a){ee(o[a])&&(i.push(Q(a)),i.push(ce(r,o[a].toString())))}),$e(r)?n.push(Q(t)+"="+i.join(",")):i.length!==0&&n.push(i.join(","))}else r===";"?ee(o)&&n.push(Q(t)):o===""&&(r==="&"||r==="?")?n.push(Q(t)+"="):o===""&&n.push("");return n}function xo(e){return{expand:$o.bind(null,e)}}function $o(e,r){var t=["+","#",".","/",";","?","&"];return e.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g,function(s,o,n){if(o){let a="",c=[];if(t.indexOf(o.charAt(0))!==-1&&(a=o.charAt(0),o=o.substr(1)),o.split(/,/g).forEach(function(u){var l=/([^:\*]*)(?::(\d+)|(\*))?/.exec(u);c.push(Bo(r,a,l[1],l[2]||l[3]))}),a&&a!=="+"){var i=",";return a==="?"?i="&":a!=="#"&&(i=a),(c.length!==0?a:"")+c.join(i)}else return c.join(",")}else return ct(n)})}function ut(e){let r=e.method.toUpperCase(),t=(e.url||"/").replace(/:([a-z]\w+)/g,"{$1}"),s=Object.assign({},e.headers),o,n=at(e,["method","baseUrl","url","headers","request","mediaType"]),i=Io(t);t=xo(t).expand(n),/^http/.test(t)||(t=e.baseUrl+t);let a=Object.keys(e).filter(l=>i.includes(l)).concat("baseUrl"),c=at(n,a);if(!/application\/octet-stream/i.test(s.accept)&&(e.mediaType.format&&(s.accept=s.accept.split(/,/).map(l=>l.replace(/application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/,`application/vnd$1$2.${e.mediaType.format}`)).join(",")),e.mediaType.previews.length)){let l=s.accept.match(/[\w-]+(?=-preview)/g)||[];s.accept=l.concat(e.mediaType.previews).map(d=>{let m=e.mediaType.format?`.${e.mediaType.format}`:"+json";return`application/vnd.github.${d}-preview${m}`}).join(",")}return["GET","HEAD"].includes(r)?t=jo(t,c):"data"in c?o=c.data:Object.keys(c).length?o=c:s["content-length"]=0,!s["content-type"]&&typeof o!="undefined"&&(s["content-type"]="application/json; charset=utf-8"),["PATCH","PUT"].includes(r)&&typeof o=="undefined"&&(o=""),Object.assign({method:r,url:t,headers:s},typeof o!="undefined"?{body:o}:null,e.request?{request:e.request}:null)}function Mo(e,r,t){return ut(xe(e,r,t))}function lt(e,r){let t=xe(e,r),s=Mo.bind(null,t);return Object.assign(s,{DEFAULTS:t,defaults:lt.bind(null,t),merge:xe.bind(null,t),parse:ut})}var Ho="6.0.12",No=`octokit-endpoint.js/${Ho} ${Fo.getUserAgent()}`,zo={method:"GET",baseUrl:"https://api.github.com",headers:{accept:"application/vnd.github.v3+json","user-agent":No},mediaType:{format:"",previews:[]}},Wo=lt(null,zo);Me.endpoint=Wo});var yt=g((D,_t)=>{"use strict";Object.defineProperty(D,"__esModule",{value:!0});function ue(e){return e&&typeof e=="object"&&"default"in e?e.default:e}var C=ue(require("stream")),dt=ue(require("http")),He=ue(require("url")),Vo=ue(require("https")),z=ue(require("zlib")),Ko=C.Readable,q=Symbol("buffer"),Ne=Symbol("type"),W=class{constructor(){this[Ne]="";let r=arguments[0],t=arguments[1],s=[],o=0;if(r){let i=r,a=Number(i.length);for(let c=0;c<a;c++){let u=i[c],l;u instanceof Buffer?l=u:ArrayBuffer.isView(u)?l=Buffer.from(u.buffer,u.byteOffset,u.byteLength):u instanceof ArrayBuffer?l=Buffer.from(u):u instanceof W?l=u[q]:l=Buffer.from(typeof u=="string"?u:String(u)),o+=l.length,s.push(l)}}this[q]=Buffer.concat(s);let n=t&&t.type!==void 0&&String(t.type).toLowerCase();n&&!/[^\u0020-\u007E]/.test(n)&&(this[Ne]=n)}get size(){return this[q].length}get type(){return this[Ne]}text(){return Promise.resolve(this[q].toString())}arrayBuffer(){let r=this[q],t=r.buffer.slice(r.byteOffset,r.byteOffset+r.byteLength);return Promise.resolve(t)}stream(){let r=new Ko;return r._read=function(){},r.push(this[q]),r.push(null),r}toString(){return"[object Blob]"}slice(){let r=this.size,t=arguments[0],s=arguments[1],o,n;t===void 0?o=0:t<0?o=Math.max(r+t,0):o=Math.min(t,r),s===void 0?n=r:s<0?n=Math.max(r+s,0):n=Math.min(s,r);let i=Math.max(n-o,0),c=this[q].slice(o,o+i),u=new W([],{type:arguments[2]});return u[q]=c,u}};Object.defineProperties(W.prototype,{size:{enumerable:!0},type:{enumerable:!0},slice:{enumerable:!0}});Object.defineProperty(W.prototype,Symbol.toStringTag,{value:"Blob",writable:!1,enumerable:!1,configurable:!0});function w(e,r,t){Error.call(this,e),this.message=e,this.type=r,t&&(this.code=this.errno=t.code),Error.captureStackTrace(this,this.constructor)}w.prototype=Object.create(Error.prototype);w.prototype.constructor=w;w.prototype.name="FetchError";var ze;try{ze=require("encoding").convert}catch(e){}var L=Symbol("Body internals"),mt=C.PassThrough;function E(e){var r=this,t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},s=t.size;let o=s===void 0?0:s;var n=t.timeout;let i=n===void 0?0:n;e==null?e=null:gt(e)?e=Buffer.from(e.toString()):le(e)||Buffer.isBuffer(e)||(Object.prototype.toString.call(e)==="[object ArrayBuffer]"?e=Buffer.from(e):ArrayBuffer.isView(e)?e=Buffer.from(e.buffer,e.byteOffset,e.byteLength):e instanceof C||(e=Buffer.from(String(e)))),this[L]={body:e,disturbed:!1,error:null},this.size=o,this.timeout=i,e instanceof C&&e.on("error",function(a){let c=a.name==="AbortError"?a:new w(`Invalid response body while trying to fetch ${r.url}: ${a.message}`,"system",a);r[L].error=c})}E.prototype={get body(){return this[L].body},get bodyUsed(){return this[L].disturbed},arrayBuffer(){return re.call(this).then(function(e){return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)})},blob(){let e=this.headers&&this.headers.get("content-type")||"";return re.call(this).then(function(r){return Object.assign(new W([],{type:e.toLowerCase()}),{[q]:r})})},json(){var e=this;return re.call(this).then(function(r){try{return JSON.parse(r.toString())}catch(t){return E.Promise.reject(new w(`invalid json response body at ${e.url} reason: ${t.message}`,"invalid-json"))}})},text(){return re.call(this).then(function(e){return e.toString()})},buffer(){return re.call(this)},textConverted(){var e=this;return re.call(this).then(function(r){return Jo(r,e.headers)})}};Object.defineProperties(E.prototype,{body:{enumerable:!0},bodyUsed:{enumerable:!0},arrayBuffer:{enumerable:!0},blob:{enumerable:!0},json:{enumerable:!0},text:{enumerable:!0}});E.mixIn=function(e){for(let r of Object.getOwnPropertyNames(E.prototype))if(!(r in e)){let t=Object.getOwnPropertyDescriptor(E.prototype,r);Object.defineProperty(e,r,t)}};function re(){var e=this;if(this[L].disturbed)return E.Promise.reject(new TypeError(`body used already for: ${this.url}`));if(this[L].disturbed=!0,this[L].error)return E.Promise.reject(this[L].error);let r=this.body;if(r===null)return E.Promise.resolve(Buffer.alloc(0));if(le(r)&&(r=r.stream()),Buffer.isBuffer(r))return E.Promise.resolve(r);if(!(r instanceof C))return E.Promise.resolve(Buffer.alloc(0));let t=[],s=0,o=!1;return new E.Promise(function(n,i){let a;e.timeout&&(a=setTimeout(function(){o=!0,i(new w(`Response timeout while trying to fetch ${e.url} (over ${e.timeout}ms)`,"body-timeout"))},e.timeout)),r.on("error",function(c){c.name==="AbortError"?(o=!0,i(c)):i(new w(`Invalid response body while trying to fetch ${e.url}: ${c.message}`,"system",c))}),r.on("data",function(c){if(!(o||c===null)){if(e.size&&s+c.length>e.size){o=!0,i(new w(`content size at ${e.url} over limit: ${e.size}`,"max-size"));return}s+=c.length,t.push(c)}}),r.on("end",function(){if(!o){clearTimeout(a);try{n(Buffer.concat(t,s))}catch(c){i(new w(`Could not create Buffer from response body for ${e.url}: ${c.message}`,"system",c))}}})})}function Jo(e,r){if(typeof ze!="function")throw new Error("The package `encoding` must be installed to use the textConverted() function");let t=r.get("content-type"),s="utf-8",o,n;return t&&(o=/charset=([^;]*)/i.exec(t)),n=e.slice(0,1024).toString(),!o&&n&&(o=/<meta.+?charset=(['"])(.+?)\1/i.exec(n)),!o&&n&&(o=/<meta[\s]+?http-equiv=(['"])content-type\1[\s]+?content=(['"])(.+?)\2/i.exec(n),o||(o=/<meta[\s]+?content=(['"])(.+?)\1[\s]+?http-equiv=(['"])content-type\3/i.exec(n),o&&o.pop()),o&&(o=/charset=(.*)/i.exec(o.pop()))),!o&&n&&(o=/<\?xml.+?encoding=(['"])(.+?)\1/i.exec(n)),o&&(s=o.pop(),(s==="gb2312"||s==="gbk")&&(s="gb18030")),ze(e,"UTF-8",s).toString()}function gt(e){return typeof e!="object"||typeof e.append!="function"||typeof e.delete!="function"||typeof e.get!="function"||typeof e.getAll!="function"||typeof e.has!="function"||typeof e.set!="function"?!1:e.constructor.name==="URLSearchParams"||Object.prototype.toString.call(e)==="[object URLSearchParams]"||typeof e.sort=="function"}function le(e){return typeof e=="object"&&typeof e.arrayBuffer=="function"&&typeof e.type=="string"&&typeof e.stream=="function"&&typeof e.constructor=="function"&&typeof e.constructor.name=="string"&&/^(Blob|File)$/.test(e.constructor.name)&&/^(Blob|File)$/.test(e[Symbol.toStringTag])}function ft(e){let r,t,s=e.body;if(e.bodyUsed)throw new Error("cannot clone body after it is used");return s instanceof C&&typeof s.getBoundary!="function"&&(r=new mt,t=new mt,s.pipe(r),s.pipe(t),e[L].body=r,s=t),s}function ht(e){return e===null?null:typeof e=="string"?"text/plain;charset=UTF-8":gt(e)?"application/x-www-form-urlencoded;charset=UTF-8":le(e)?e.type||null:Buffer.isBuffer(e)||Object.prototype.toString.call(e)==="[object ArrayBuffer]"||ArrayBuffer.isView(e)?null:typeof e.getBoundary=="function"?`multipart/form-data;boundary=${e.getBoundary()}`:e instanceof C?null:"text/plain;charset=UTF-8"}function Tt(e){let r=e.body;return r===null?0:le(r)?r.size:Buffer.isBuffer(r)?r.length:r&&typeof r.getLengthSync=="function"&&(r._lengthRetrievers&&r._lengthRetrievers.length==0||r.hasKnownLength&&r.hasKnownLength())?r.getLengthSync():null}function Yo(e,r){let t=r.body;t===null?e.end():le(t)?t.stream().pipe(e):Buffer.isBuffer(t)?(e.write(t),e.end()):t.pipe(e)}E.Promise=global.Promise;var Et=/[^\^_`a-zA-Z\-0-9!#$%&'*+.|~]/,We=/[^\t\x20-\x7e\x80-\xff]/;function pe(e){if(e=`${e}`,Et.test(e)||e==="")throw new TypeError(`${e} is not a legal HTTP header name`)}function bt(e){if(e=`${e}`,We.test(e))throw new TypeError(`${e} is not a legal HTTP header value`)}function te(e,r){r=r.toLowerCase();for(let t in e)if(t.toLowerCase()===r)return t}var h=Symbol("map"),O=class{constructor(){let r=arguments.length>0&&arguments[0]!==void 0?arguments[0]:void 0;if(this[h]=Object.create(null),r instanceof O){let t=r.raw(),s=Object.keys(t);for(let o of s)for(let n of t[o])this.append(o,n);return}if(r!=null)if(typeof r=="object"){let t=r[Symbol.iterator];if(t!=null){if(typeof t!="function")throw new TypeError("Header pairs must be iterable");let s=[];for(let o of r){if(typeof o!="object"||typeof o[Symbol.iterator]!="function")throw new TypeError("Each header pair must be iterable");s.push(Array.from(o))}for(let o of s){if(o.length!==2)throw new TypeError("Each header pair must be a name/value tuple");this.append(o[0],o[1])}}else for(let s of Object.keys(r)){let o=r[s];this.append(s,o)}}else throw new TypeError("Provided initializer must be an object")}get(r){r=`${r}`,pe(r);let t=te(this[h],r);return t===void 0?null:this[h][t].join(", ")}forEach(r){let t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:void 0,s=Ve(this),o=0;for(;o<s.length;){var n=s[o];let i=n[0],a=n[1];r.call(t,a,i,this),s=Ve(this),o++}}set(r,t){r=`${r}`,t=`${t}`,pe(r),bt(t);let s=te(this[h],r);this[h][s!==void 0?s:r]=[t]}append(r,t){r=`${r}`,t=`${t}`,pe(r),bt(t);let s=te(this[h],r);s!==void 0?this[h][s].push(t):this[h][r]=[t]}has(r){return r=`${r}`,pe(r),te(this[h],r)!==void 0}delete(r){r=`${r}`,pe(r);let t=te(this[h],r);t!==void 0&&delete this[h][t]}raw(){return this[h]}keys(){return Je(this,"key")}values(){return Je(this,"value")}[Symbol.iterator](){return Je(this,"key+value")}};O.prototype.entries=O.prototype[Symbol.iterator];Object.defineProperty(O.prototype,Symbol.toStringTag,{value:"Headers",writable:!1,enumerable:!1,configurable:!0});Object.defineProperties(O.prototype,{get:{enumerable:!0},forEach:{enumerable:!0},set:{enumerable:!0},append:{enumerable:!0},has:{enumerable:!0},delete:{enumerable:!0},keys:{enumerable:!0},values:{enumerable:!0},entries:{enumerable:!0}});function Ve(e){let r=arguments.length>1&&arguments[1]!==void 0?arguments[1]:"key+value";return Object.keys(e[h]).sort().map(r==="key"?function(s){return s.toLowerCase()}:r==="value"?function(s){return e[h][s].join(", ")}:function(s){return[s.toLowerCase(),e[h][s].join(", ")]})}var Ke=Symbol("internal");function Je(e,r){let t=Object.create(Ye);return t[Ke]={target:e,kind:r,index:0},t}var Ye=Object.setPrototypeOf({next(){if(!this||Object.getPrototypeOf(this)!==Ye)throw new TypeError("Value of `this` is not a HeadersIterator");var e=this[Ke];let r=e.target,t=e.kind,s=e.index,o=Ve(r,t),n=o.length;return s>=n?{value:void 0,done:!0}:(this[Ke].index=s+1,{value:o[s],done:!1})}},Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));Object.defineProperty(Ye,Symbol.toStringTag,{value:"HeadersIterator",writable:!1,enumerable:!1,configurable:!0});function Zo(e){let r=Object.assign({__proto__:null},e[h]),t=te(e[h],"Host");return t!==void 0&&(r[t]=r[t][0]),r}function Xo(e){let r=new O;for(let t of Object.keys(e))if(!Et.test(t))if(Array.isArray(e[t]))for(let s of e[t])We.test(s)||(r[h][t]===void 0?r[h][t]=[s]:r[h][t].push(s));else We.test(e[t])||(r[h][t]=[e[t]]);return r}var H=Symbol("Response internals"),Qo=dt.STATUS_CODES,S=class{constructor(){let r=arguments.length>0&&arguments[0]!==void 0?arguments[0]:null,t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};E.call(this,r,t);let s=t.status||200,o=new O(t.headers);if(r!=null&&!o.has("Content-Type")){let n=ht(r);n&&o.append("Content-Type",n)}this[H]={url:t.url,status:s,statusText:t.statusText||Qo[s],headers:o,counter:t.counter}}get url(){return this[H].url||""}get status(){return this[H].status}get ok(){return this[H].status>=200&&this[H].status<300}get redirected(){return this[H].counter>0}get statusText(){return this[H].statusText}get headers(){return this[H].headers}clone(){return new S(ft(this),{url:this.url,status:this.status,statusText:this.statusText,headers:this.headers,ok:this.ok,redirected:this.redirected})}};E.mixIn(S.prototype);Object.defineProperties(S.prototype,{url:{enumerable:!0},status:{enumerable:!0},ok:{enumerable:!0},redirected:{enumerable:!0},statusText:{enumerable:!0},headers:{enumerable:!0},clone:{enumerable:!0}});Object.defineProperty(S.prototype,Symbol.toStringTag,{value:"Response",writable:!1,enumerable:!1,configurable:!0});var I=Symbol("Request internals"),Ze=He.parse,en=He.format,rn="destroy"in C.Readable.prototype;function ve(e){return typeof e=="object"&&typeof e[I]=="object"}function tn(e){let r=e&&typeof e=="object"&&Object.getPrototypeOf(e);return!!(r&&r.constructor.name==="AbortSignal")}var B=class{constructor(r){let t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},s;ve(r)?s=Ze(r.url):(r&&r.href?s=Ze(r.href):s=Ze(`${r}`),r={});let o=t.method||r.method||"GET";if(o=o.toUpperCase(),(t.body!=null||ve(r)&&r.body!==null)&&(o==="GET"||o==="HEAD"))throw new TypeError("Request with GET/HEAD method cannot have body");let n=t.body!=null?t.body:ve(r)&&r.body!==null?ft(r):null;E.call(this,n,{timeout:t.timeout||r.timeout||0,size:t.size||r.size||0});let i=new O(t.headers||r.headers||{});if(n!=null&&!i.has("Content-Type")){let c=ht(n);c&&i.append("Content-Type",c)}let a=ve(r)?r.signal:null;if("signal"in t&&(a=t.signal),a!=null&&!tn(a))throw new TypeError("Expected signal to be an instanceof AbortSignal");this[I]={method:o,redirect:t.redirect||r.redirect||"follow",headers:i,parsedURL:s,signal:a},this.follow=t.follow!==void 0?t.follow:r.follow!==void 0?r.follow:20,this.compress=t.compress!==void 0?t.compress:r.compress!==void 0?r.compress:!0,this.counter=t.counter||r.counter||0,this.agent=t.agent||r.agent}get method(){return this[I].method}get url(){return en(this[I].parsedURL)}get headers(){return this[I].headers}get redirect(){return this[I].redirect}get signal(){return this[I].signal}clone(){return new B(this)}};E.mixIn(B.prototype);Object.defineProperty(B.prototype,Symbol.toStringTag,{value:"Request",writable:!1,enumerable:!1,configurable:!0});Object.defineProperties(B.prototype,{method:{enumerable:!0},url:{enumerable:!0},headers:{enumerable:!0},redirect:{enumerable:!0},clone:{enumerable:!0},signal:{enumerable:!0}});function sn(e){let r=e[I].parsedURL,t=new O(e[I].headers);if(t.has("Accept")||t.set("Accept","*/*"),!r.protocol||!r.hostname)throw new TypeError("Only absolute URLs are supported");if(!/^https?:$/.test(r.protocol))throw new TypeError("Only HTTP(S) protocols are supported");if(e.signal&&e.body instanceof C.Readable&&!rn)throw new Error("Cancellation of streamed requests with AbortSignal is not supported in node < 8");let s=null;if(e.body==null&&/^(POST|PUT)$/i.test(e.method)&&(s="0"),e.body!=null){let n=Tt(e);typeof n=="number"&&(s=String(n))}s&&t.set("Content-Length",s),t.has("User-Agent")||t.set("User-Agent","node-fetch/1.0 (+https://github.com/bitinn/node-fetch)"),e.compress&&!t.has("Accept-Encoding")&&t.set("Accept-Encoding","gzip,deflate");let o=e.agent;return typeof o=="function"&&(o=o(r)),!t.has("Connection")&&!o&&t.set("Connection","close"),Object.assign({},r,{method:e.method,headers:Zo(t),agent:o})}function de(e){Error.call(this,e),this.type="aborted",this.message=e,Error.captureStackTrace(this,this.constructor)}de.prototype=Object.create(Error.prototype);de.prototype.constructor=de;de.prototype.name="AbortError";var wt=C.PassThrough,on=He.resolve;function N(e,r){if(!N.Promise)throw new Error("native promise missing, set fetch.Promise to your favorite alternative");return E.Promise=N.Promise,new N.Promise(function(t,s){let o=new B(e,r),n=sn(o),i=(n.protocol==="https:"?Vo:dt).request,a=o.signal,c=null,u=function(){let x=new de("The user aborted a request.");s(x),o.body&&o.body instanceof C.Readable&&o.body.destroy(x),!(!c||!c.body)&&c.body.emit("error",x)};if(a&&a.aborted){u();return}let l=function(){u(),b()},d=i(n),m;a&&a.addEventListener("abort",l);function b(){d.abort(),a&&a.removeEventListener("abort",l),clearTimeout(m)}o.timeout&&d.once("socket",function(f){m=setTimeout(function(){s(new w(`network timeout at: ${o.url}`,"request-timeout")),b()},o.timeout)}),d.on("error",function(f){s(new w(`request to ${o.url} failed, reason: ${f.message}`,"system",f)),b()}),d.on("response",function(f){clearTimeout(m);let x=Xo(f.headers);if(N.isRedirect(f.statusCode)){let Se=x.get("Location"),K=Se===null?null:on(o.url,Se);switch(o.redirect){case"error":s(new w(`uri requested responds with a redirect, redirect mode is set to error: ${o.url}`,"no-redirect")),b();return;case"manual":if(K!==null)try{x.set("Location",K)}catch(ps){s(ps)}break;case"follow":if(K===null)break;if(o.counter>=o.follow){s(new w(`maximum redirect reached at: ${o.url}`,"max-redirect")),b();return}let ge={headers:new O(o.headers),follow:o.follow,counter:o.counter+1,agent:o.agent,compress:o.compress,method:o.method,body:o.body,signal:o.signal,timeout:o.timeout,size:o.size};if(f.statusCode!==303&&o.body&&Tt(o)===null){s(new w("Cannot follow redirect with body being a readable stream","unsupported-redirect")),b();return}(f.statusCode===303||(f.statusCode===301||f.statusCode===302)&&o.method==="POST")&&(ge.method="GET",ge.body=void 0,ge.headers.delete("content-length")),t(N(new B(K,ge))),b();return}}f.once("end",function(){a&&a.removeEventListener("abort",l)});let G=f.pipe(new wt),oe={url:o.url,status:f.statusCode,statusText:f.statusMessage,headers:x,size:o.size,timeout:o.timeout,counter:o.counter},V=x.get("Content-Encoding");if(!o.compress||o.method==="HEAD"||V===null||f.statusCode===204||f.statusCode===304){c=new S(G,oe),t(c);return}let ls={flush:z.Z_SYNC_FLUSH,finishFlush:z.Z_SYNC_FLUSH};if(V=="gzip"||V=="x-gzip"){G=G.pipe(z.createGunzip(ls)),c=new S(G,oe),t(c);return}if(V=="deflate"||V=="x-deflate"){f.pipe(new wt).once("data",function(K){(K[0]&15)==8?G=G.pipe(z.createInflate()):G=G.pipe(z.createInflateRaw()),c=new S(G,oe),t(c)});return}if(V=="br"&&typeof z.createBrotliDecompress=="function"){G=G.pipe(z.createBrotliDecompress()),c=new S(G,oe),t(c);return}c=new S(G,oe),t(c)}),Yo(d,o)})}N.isRedirect=function(e){return e===301||e===302||e===303||e===307||e===308};N.Promise=global.Promise;_t.exports=D=N;Object.defineProperty(D,"__esModule",{value:!0});D.default=D;D.Headers=O;D.Request=B;D.Response=S;D.FetchError=w});var Gt=g(Xe=>{"use strict";Object.defineProperty(Xe,"__esModule",{value:!0});var vt=class extends Error{constructor(r){super(r);Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor),this.name="Deprecation"}};Xe.Deprecation=vt});var kt=g((Oi,Ot)=>{Ot.exports=Pt;function Pt(e,r){if(e&&r)return Pt(e)(r);if(typeof e!="function")throw new TypeError("need wrapper function");return Object.keys(e).forEach(function(s){t[s]=e[s]}),t;function t(){for(var s=new Array(arguments.length),o=0;o<s.length;o++)s[o]=arguments[o];var n=e.apply(this,s),i=s[s.length-1];return typeof n=="function"&&n!==i&&Object.keys(i).forEach(function(a){n[a]=i[a]}),n}}});var Rt=g((ki,Qe)=>{var At=kt();Qe.exports=At(Ge);Qe.exports.strict=At(St);Ge.proto=Ge(function(){Object.defineProperty(Function.prototype,"once",{value:function(){return Ge(this)},configurable:!0}),Object.defineProperty(Function.prototype,"onceStrict",{value:function(){return St(this)},configurable:!0})});function Ge(e){var r=function(){return r.called?r.value:(r.called=!0,r.value=e.apply(this,arguments))};return r.called=!1,r}function St(e){var r=function(){if(r.called)throw new Error(r.onceError);return r.called=!0,r.value=e.apply(this,arguments)},t=e.name||"Function wrapped with `once`";return r.onceError=t+" shouldn't be called more than once",r.called=!1,r}});var Dt=g(er=>{"use strict";Object.defineProperty(er,"__esModule",{value:!0});function nn(e){return e&&typeof e=="object"&&"default"in e?e.default:e}var Ut=Gt(),Ct=nn(Rt()),an=Ct(e=>console.warn(e)),cn=Ct(e=>console.warn(e)),Ft=class extends Error{constructor(r,t,s){super(r);Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor),this.name="HttpError",this.status=t;let o;"headers"in s&&typeof s.headers!="undefined"&&(o=s.headers),"response"in s&&(this.response=s.response,o=s.response.headers);let n=Object.assign({},s.request);s.request.headers.authorization&&(n.headers=Object.assign({},s.request.headers,{authorization:s.request.headers.authorization.replace(/ .*$/," [REDACTED]")})),n.url=n.url.replace(/\bclient_secret=\w+/g,"client_secret=[REDACTED]").replace(/\baccess_token=\w+/g,"access_token=[REDACTED]"),this.request=n,Object.defineProperty(this,"code",{get(){return an(new Ut.Deprecation("[@octokit/request-error] `error.code` is deprecated, use `error.status`.")),t}}),Object.defineProperty(this,"headers",{get(){return cn(new Ut.Deprecation("[@octokit/request-error] `error.headers` is deprecated, use `error.response.headers`.")),o||{}}})}};er.RequestError=Ft});var or=g(sr=>{"use strict";Object.defineProperty(sr,"__esModule",{value:!0});function un(e){return e&&typeof e=="object"&&"default"in e?e.default:e}var ln=pt(),pn=ie(),dn=Be(),mn=un(yt()),me=Dt(),gn="5.6.1";function fn(e){return e.arrayBuffer()}function jt(e){let r=e.request&&e.request.log?e.request.log:console;(dn.isPlainObject(e.body)||Array.isArray(e.body))&&(e.body=JSON.stringify(e.body));let t={},s,o;return(e.request&&e.request.fetch||mn)(e.url,Object.assign({method:e.method,body:e.body,headers:e.headers,redirect:e.redirect},e.request)).then(async i=>{o=i.url,s=i.status;for(let a of i.headers)t[a[0]]=a[1];if("deprecation"in t){let a=t.link&&t.link.match(/<([^>]+)>; rel="deprecation"/),c=a&&a.pop();r.warn(`[@octokit/request] "${e.method} ${e.url}" is deprecated. It is scheduled to be removed on ${t.sunset}${c?`. See ${c}`:""}`)}if(!(s===204||s===205)){if(e.method==="HEAD"){if(s<400)return;throw new me.RequestError(i.statusText,s,{response:{url:o,status:s,headers:t,data:void 0},request:e})}if(s===304)throw new me.RequestError("Not modified",s,{response:{url:o,status:s,headers:t,data:await rr(i)},request:e});if(s>=400){let a=await rr(i);throw new me.RequestError(hn(a),s,{response:{url:o,status:s,headers:t,data:a},request:e})}return rr(i)}}).then(i=>({status:s,url:o,headers:t,data:i})).catch(i=>{throw i instanceof me.RequestError?i:new me.RequestError(i.message,500,{request:e})})}async function rr(e){let r=e.headers.get("content-type");return/application\/json/.test(r)?e.json():!r||/^text\/|charset=utf-8$/.test(r)?e.text():fn(e)}function hn(e){return typeof e=="string"?e:"message"in e?Array.isArray(e.errors)?`${e.message}: ${e.errors.map(JSON.stringify).join(", ")}`:e.message:`Unknown error: ${JSON.stringify(e)}`}function tr(e,r){let t=e.defaults(r);return Object.assign(function(o,n){let i=t.merge(o,n);if(!i.request||!i.request.hook)return jt(t.parse(i));let a=(c,u)=>jt(t.parse(t.merge(c,u)));return Object.assign(a,{endpoint:t,defaults:tr.bind(null,t)}),i.request.hook(a,i)},{endpoint:t,defaults:tr.bind(null,t)})}var Tn=tr(ln.endpoint,{headers:{"user-agent":`octokit-request.js/${gn} ${pn.getUserAgent()}`}});sr.request=Tn});var Bt=g(Pe=>{"use strict";Object.defineProperty(Pe,"__esModule",{value:!0});var qt=or(),En=ie(),bn="4.6.4",Lt=class extends Error{constructor(r,t){let s=t.data.errors[0].message;super(s);Object.assign(this,t.data),Object.assign(this,{headers:t.headers}),this.name="GraphqlError",this.request=r,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}},wn=["method","baseUrl","url","headers","request","query","mediaType"],_n=["query","method","url"],It=/\/api\/v3\/?$/;function yn(e,r,t){if(t){if(typeof r=="string"&&"query"in t)return Promise.reject(new Error('[@octokit/graphql] "query" cannot be used as variable name'));for(let i in t)if(!!_n.includes(i))return Promise.reject(new Error(`[@octokit/graphql] "${i}" cannot be used as variable name`))}let s=typeof r=="string"?Object.assign({query:r},t):r,o=Object.keys(s).reduce((i,a)=>wn.includes(a)?(i[a]=s[a],i):(i.variables||(i.variables={}),i.variables[a]=s[a],i),{}),n=s.baseUrl||e.endpoint.DEFAULTS.baseUrl;return It.test(n)&&(o.url=n.replace(It,"/api/graphql")),e(o).then(i=>{if(i.data.errors){let a={};for(let c of Object.keys(i.headers))a[c]=i.headers[c];throw new Lt(o,{headers:a,data:i.data})}return i.data.data})}function nr(e,r){let t=e.defaults(r);return Object.assign((o,n)=>yn(t,o,n),{defaults:nr.bind(null,t),endpoint:qt.request.endpoint})}var vn=nr(qt.request,{headers:{"user-agent":`octokit-graphql.js/${bn} ${En.getUserAgent()}`},method:"POST",url:"/graphql"});function Gn(e){return nr(e,{method:"POST",url:"/graphql"})}Pe.graphql=vn;Pe.withCustomRequest=Gn});var xt=g(ir=>{"use strict";Object.defineProperty(ir,"__esModule",{value:!0});async function Pn(e){let r=e.split(/\./).length===3?"app":/^v\d+\./.test(e)?"installation":"oauth";return{type:"token",token:e,tokenType:r}}function On(e){return e.split(/\./).length===3?`bearer ${e}`:`token ${e}`}async function kn(e,r,t,s){let o=r.endpoint.merge(t,s);return o.headers.authorization=On(e),r(o)}var An=function(r){if(!r)throw new Error("[@octokit/auth-token] No token passed to createTokenAuth");if(typeof r!="string")throw new Error("[@octokit/auth-token] Token passed to createTokenAuth is not a string");return r=r.replace(/^(token|bearer) +/i,""),Object.assign(Pn.bind(null,r),{hook:kn.bind(null,r)})};ir.createTokenAuth=An});var Ht=g(ar=>{"use strict";Object.defineProperty(ar,"__esModule",{value:!0});var Sn=ie(),Rn=st(),$t=or(),Un=Bt(),Cn=xt();function Fn(e,r){if(e==null)return{};var t={},s=Object.keys(e),o,n;for(n=0;n<s.length;n++)o=s[n],!(r.indexOf(o)>=0)&&(t[o]=e[o]);return t}function Dn(e,r){if(e==null)return{};var t=Fn(e,r),s,o;if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(o=0;o<n.length;o++)s=n[o],!(r.indexOf(s)>=0)&&(!Object.prototype.propertyIsEnumerable.call(e,s)||(t[s]=e[s]))}return t}var Mt="3.5.1",jn=["authStrategy"],Oe=class{constructor(r={}){let t=new Rn.Collection,s={baseUrl:$t.request.endpoint.DEFAULTS.baseUrl,headers:{},request:Object.assign({},r.request,{hook:t.bind(null,"request")}),mediaType:{previews:[],format:""}};if(s.headers["user-agent"]=[r.userAgent,`octokit-core.js/${Mt} ${Sn.getUserAgent()}`].filter(Boolean).join(" "),r.baseUrl&&(s.baseUrl=r.baseUrl),r.previews&&(s.mediaType.previews=r.previews),r.timeZone&&(s.headers["time-zone"]=r.timeZone),this.request=$t.request.defaults(s),this.graphql=Un.withCustomRequest(this.request).defaults(s),this.log=Object.assign({debug:()=>{},info:()=>{},warn:console.warn.bind(console),error:console.error.bind(console)},r.log),this.hook=t,r.authStrategy){let{authStrategy:n}=r,i=Dn(r,jn),a=n(Object.assign({request:this.request,log:this.log,octokit:this,octokitOptions:i},r.auth));t.wrap("request",a.hook),this.auth=a}else if(!r.auth)this.auth=async()=>({type:"unauthenticated"});else{let n=Cn.createTokenAuth(r.auth);t.wrap("request",n.hook),this.auth=n}this.constructor.plugins.forEach(n=>{Object.assign(this,n(this,r))})}static defaults(r){return class extends this{constructor(...s){let o=s[0]||{};if(typeof r=="function"){super(r(o));return}super(Object.assign({},r,o,o.userAgent&&r.userAgent?{userAgent:`${o.userAgent} ${r.userAgent}`}:null))}}}static plugin(...r){var t;let s=this.plugins;return t=class extends this{},t.plugins=s.concat(r.filter(n=>!s.includes(n))),t}};Oe.VERSION=Mt;Oe.plugins=[];ar.Octokit=Oe});var Zt=g(ke=>{"use strict";Object.defineProperty(ke,"__esModule",{value:!0});function Nt(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);r&&(s=s.filter(function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable})),t.push.apply(t,s)}return t}function zt(e){for(var r=1;r<arguments.length;r++){var t=arguments[r]!=null?arguments[r]:{};r%2?Nt(Object(t),!0).forEach(function(s){qn(e,s,t[s])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):Nt(Object(t)).forEach(function(s){Object.defineProperty(e,s,Object.getOwnPropertyDescriptor(t,s))})}return e}function qn(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}var Wt={actions:{addSelectedRepoToOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],approveWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/approve"],cancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel"],createOrUpdateEnvironmentSecret:["PUT /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}"],createOrUpdateOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}"],createRegistrationTokenForOrg:["POST /orgs/{org}/actions/runners/registration-token"],createRegistrationTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/registration-token"],createRemoveTokenForOrg:["POST /orgs/{org}/actions/runners/remove-token"],createRemoveTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/remove-token"],createWorkflowDispatch:["POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches"],deleteArtifact:["DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],deleteEnvironmentSecret:["DELETE /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}"],deleteOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}"],deleteSelfHostedRunnerFromOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}"],deleteSelfHostedRunnerFromRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}"],deleteWorkflowRun:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}"],deleteWorkflowRunLogs:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],disableSelectedRepositoryGithubActionsOrganization:["DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}"],disableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable"],downloadArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}"],downloadJobLogsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs"],downloadWorkflowRunLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],enableSelectedRepositoryGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories/{repository_id}"],enableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable"],getAllowedActionsOrganization:["GET /orgs/{org}/actions/permissions/selected-actions"],getAllowedActionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/selected-actions"],getArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],getEnvironmentPublicKey:["GET /repositories/{repository_id}/environments/{environment_name}/secrets/public-key"],getEnvironmentSecret:["GET /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}"],getGithubActionsPermissionsOrganization:["GET /orgs/{org}/actions/permissions"],getGithubActionsPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions"],getJobForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}"],getOrgPublicKey:["GET /orgs/{org}/actions/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}"],getPendingDeploymentsForRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],getRepoPermissions:["GET /repos/{owner}/{repo}/actions/permissions",{},{renamed:["actions","getGithubActionsPermissionsRepository"]}],getRepoPublicKey:["GET /repos/{owner}/{repo}/actions/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/actions/secrets/{secret_name}"],getReviewsForRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvals"],getSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}"],getSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}"],getWorkflow:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}"],getWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}"],getWorkflowRunUsage:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing"],getWorkflowUsage:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing"],listArtifactsForRepo:["GET /repos/{owner}/{repo}/actions/artifacts"],listEnvironmentSecrets:["GET /repositories/{repository_id}/environments/{environment_name}/secrets"],listJobsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs"],listOrgSecrets:["GET /orgs/{org}/actions/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/actions/secrets"],listRepoWorkflows:["GET /repos/{owner}/{repo}/actions/workflows"],listRunnerApplicationsForOrg:["GET /orgs/{org}/actions/runners/downloads"],listRunnerApplicationsForRepo:["GET /repos/{owner}/{repo}/actions/runners/downloads"],listSelectedReposForOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}/repositories"],listSelectedRepositoriesEnabledGithubActionsOrganization:["GET /orgs/{org}/actions/permissions/repositories"],listSelfHostedRunnersForOrg:["GET /orgs/{org}/actions/runners"],listSelfHostedRunnersForRepo:["GET /repos/{owner}/{repo}/actions/runners"],listWorkflowRunArtifacts:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts"],listWorkflowRuns:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs"],listWorkflowRunsForRepo:["GET /repos/{owner}/{repo}/actions/runs"],reRunWorkflow:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],reviewPendingDeploymentsForRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],setAllowedActionsOrganization:["PUT /orgs/{org}/actions/permissions/selected-actions"],setAllowedActionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/selected-actions"],setGithubActionsPermissionsOrganization:["PUT /orgs/{org}/actions/permissions"],setGithubActionsPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories"],setSelectedRepositoriesEnabledGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories"]},activity:{checkRepoIsStarredByAuthenticatedUser:["GET /user/starred/{owner}/{repo}"],deleteRepoSubscription:["DELETE /repos/{owner}/{repo}/subscription"],deleteThreadSubscription:["DELETE /notifications/threads/{thread_id}/subscription"],getFeeds:["GET /feeds"],getRepoSubscription:["GET /repos/{owner}/{repo}/subscription"],getThread:["GET /notifications/threads/{thread_id}"],getThreadSubscriptionForAuthenticatedUser:["GET /notifications/threads/{thread_id}/subscription"],listEventsForAuthenticatedUser:["GET /users/{username}/events"],listNotificationsForAuthenticatedUser:["GET /notifications"],listOrgEventsForAuthenticatedUser:["GET /users/{username}/events/orgs/{org}"],listPublicEvents:["GET /events"],listPublicEventsForRepoNetwork:["GET /networks/{owner}/{repo}/events"],listPublicEventsForUser:["GET /users/{username}/events/public"],listPublicOrgEvents:["GET /orgs/{org}/events"],listReceivedEventsForUser:["GET /users/{username}/received_events"],listReceivedPublicEventsForUser:["GET /users/{username}/received_events/public"],listRepoEvents:["GET /repos/{owner}/{repo}/events"],listRepoNotificationsForAuthenticatedUser:["GET /repos/{owner}/{repo}/notifications"],listReposStarredByAuthenticatedUser:["GET /user/starred"],listReposStarredByUser:["GET /users/{username}/starred"],listReposWatchedByUser:["GET /users/{username}/subscriptions"],listStargazersForRepo:["GET /repos/{owner}/{repo}/stargazers"],listWatchedReposForAuthenticatedUser:["GET /user/subscriptions"],listWatchersForRepo:["GET /repos/{owner}/{repo}/subscribers"],markNotificationsAsRead:["PUT /notifications"],markRepoNotificationsAsRead:["PUT /repos/{owner}/{repo}/notifications"],markThreadAsRead:["PATCH /notifications/threads/{thread_id}"],setRepoSubscription:["PUT /repos/{owner}/{repo}/subscription"],setThreadSubscription:["PUT /notifications/threads/{thread_id}/subscription"],starRepoForAuthenticatedUser:["PUT /user/starred/{owner}/{repo}"],unstarRepoForAuthenticatedUser:["DELETE /user/starred/{owner}/{repo}"]},apps:{addRepoToInstallation:["PUT /user/installations/{installation_id}/repositories/{repository_id}"],checkToken:["POST /applications/{client_id}/token"],createContentAttachment:["POST /content_references/{content_reference_id}/attachments",{mediaType:{previews:["corsair"]}}],createContentAttachmentForRepo:["POST /repos/{owner}/{repo}/content_references/{content_reference_id}/attachments",{mediaType:{previews:["corsair"]}}],createFromManifest:["POST /app-manifests/{code}/conversions"],createInstallationAccessToken:["POST /app/installations/{installation_id}/access_tokens"],deleteAuthorization:["DELETE /applications/{client_id}/grant"],deleteInstallation:["DELETE /app/installations/{installation_id}"],deleteToken:["DELETE /applications/{client_id}/token"],getAuthenticated:["GET /app"],getBySlug:["GET /apps/{app_slug}"],getInstallation:["GET /app/installations/{installation_id}"],getOrgInstallation:["GET /orgs/{org}/installation"],getRepoInstallation:["GET /repos/{owner}/{repo}/installation"],getSubscriptionPlanForAccount:["GET /marketplace_listing/accounts/{account_id}"],getSubscriptionPlanForAccountStubbed:["GET /marketplace_listing/stubbed/accounts/{account_id}"],getUserInstallation:["GET /users/{username}/installation"],getWebhookConfigForApp:["GET /app/hook/config"],getWebhookDelivery:["GET /app/hook/deliveries/{delivery_id}"],listAccountsForPlan:["GET /marketplace_listing/plans/{plan_id}/accounts"],listAccountsForPlanStubbed:["GET /marketplace_listing/stubbed/plans/{plan_id}/accounts"],listInstallationReposForAuthenticatedUser:["GET /user/installations/{installation_id}/repositories"],listInstallations:["GET /app/installations"],listInstallationsForAuthenticatedUser:["GET /user/installations"],listPlans:["GET /marketplace_listing/plans"],listPlansStubbed:["GET /marketplace_listing/stubbed/plans"],listReposAccessibleToInstallation:["GET /installation/repositories"],listSubscriptionsForAuthenticatedUser:["GET /user/marketplace_purchases"],listSubscriptionsForAuthenticatedUserStubbed:["GET /user/marketplace_purchases/stubbed"],listWebhookDeliveries:["GET /app/hook/deliveries"],redeliverWebhookDelivery:["POST /app/hook/deliveries/{delivery_id}/attempts"],removeRepoFromInstallation:["DELETE /user/installations/{installation_id}/repositories/{repository_id}"],resetToken:["PATCH /applications/{client_id}/token"],revokeInstallationAccessToken:["DELETE /installation/token"],scopeToken:["POST /applications/{client_id}/token/scoped"],suspendInstallation:["PUT /app/installations/{installation_id}/suspended"],unsuspendInstallation:["DELETE /app/installations/{installation_id}/suspended"],updateWebhookConfigForApp:["PATCH /app/hook/config"]},billing:{getGithubActionsBillingOrg:["GET /orgs/{org}/settings/billing/actions"],getGithubActionsBillingUser:["GET /users/{username}/settings/billing/actions"],getGithubPackagesBillingOrg:["GET /orgs/{org}/settings/billing/packages"],getGithubPackagesBillingUser:["GET /users/{username}/settings/billing/packages"],getSharedStorageBillingOrg:["GET /orgs/{org}/settings/billing/shared-storage"],getSharedStorageBillingUser:["GET /users/{username}/settings/billing/shared-storage"]},checks:{create:["POST /repos/{owner}/{repo}/check-runs"],createSuite:["POST /repos/{owner}/{repo}/check-suites"],get:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}"],getSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}"],listAnnotations:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations"],listForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-runs"],listForSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs"],listSuitesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-suites"],rerequestSuite:["POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest"],setSuitesPreferences:["PATCH /repos/{owner}/{repo}/check-suites/preferences"],update:["PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}"]},codeScanning:{deleteAnalysis:["DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}{?confirm_delete}"],getAlert:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}",{},{renamedParameters:{alert_id:"alert_number"}}],getAnalysis:["GET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}"],getSarif:["GET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}"],listAlertInstances:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances"],listAlertsForRepo:["GET /repos/{owner}/{repo}/code-scanning/alerts"],listAlertsInstances:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances",{},{renamed:["codeScanning","listAlertInstances"]}],listRecentAnalyses:["GET /repos/{owner}/{repo}/code-scanning/analyses"],updateAlert:["PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}"],uploadSarif:["POST /repos/{owner}/{repo}/code-scanning/sarifs"]},codesOfConduct:{getAllCodesOfConduct:["GET /codes_of_conduct"],getConductCode:["GET /codes_of_conduct/{key}"],getForRepo:["GET /repos/{owner}/{repo}/community/code_of_conduct",{mediaType:{previews:["scarlet-witch"]}}]},emojis:{get:["GET /emojis"]},enterpriseAdmin:{disableSelectedOrganizationGithubActionsEnterprise:["DELETE /enterprises/{enterprise}/actions/permissions/organizations/{org_id}"],enableSelectedOrganizationGithubActionsEnterprise:["PUT /enterprises/{enterprise}/actions/permissions/organizations/{org_id}"],getAllowedActionsEnterprise:["GET /enterprises/{enterprise}/actions/permissions/selected-actions"],getGithubActionsPermissionsEnterprise:["GET /enterprises/{enterprise}/actions/permissions"],listSelectedOrganizationsEnabledGithubActionsEnterprise:["GET /enterprises/{enterprise}/actions/permissions/organizations"],setAllowedActionsEnterprise:["PUT /enterprises/{enterprise}/actions/permissions/selected-actions"],setGithubActionsPermissionsEnterprise:["PUT /enterprises/{enterprise}/actions/permissions"],setSelectedOrganizationsEnabledGithubActionsEnterprise:["PUT /enterprises/{enterprise}/actions/permissions/organizations"]},gists:{checkIsStarred:["GET /gists/{gist_id}/star"],create:["POST /gists"],createComment:["POST /gists/{gist_id}/comments"],delete:["DELETE /gists/{gist_id}"],deleteComment:["DELETE /gists/{gist_id}/comments/{comment_id}"],fork:["POST /gists/{gist_id}/forks"],get:["GET /gists/{gist_id}"],getComment:["GET /gists/{gist_id}/comments/{comment_id}"],getRevision:["GET /gists/{gist_id}/{sha}"],list:["GET /gists"],listComments:["GET /gists/{gist_id}/comments"],listCommits:["GET /gists/{gist_id}/commits"],listForUser:["GET /users/{username}/gists"],listForks:["GET /gists/{gist_id}/forks"],listPublic:["GET /gists/public"],listStarred:["GET /gists/starred"],star:["PUT /gists/{gist_id}/star"],unstar:["DELETE /gists/{gist_id}/star"],update:["PATCH /gists/{gist_id}"],updateComment:["PATCH /gists/{gist_id}/comments/{comment_id}"]},git:{createBlob:["POST /repos/{owner}/{repo}/git/blobs"],createCommit:["POST /repos/{owner}/{repo}/git/commits"],createRef:["POST /repos/{owner}/{repo}/git/refs"],createTag:["POST /repos/{owner}/{repo}/git/tags"],createTree:["POST /repos/{owner}/{repo}/git/trees"],deleteRef:["DELETE /repos/{owner}/{repo}/git/refs/{ref}"],getBlob:["GET /repos/{owner}/{repo}/git/blobs/{file_sha}"],getCommit:["GET /repos/{owner}/{repo}/git/commits/{commit_sha}"],getRef:["GET /repos/{owner}/{repo}/git/ref/{ref}"],getTag:["GET /repos/{owner}/{repo}/git/tags/{tag_sha}"],getTree:["GET /repos/{owner}/{repo}/git/trees/{tree_sha}"],listMatchingRefs:["GET /repos/{owner}/{repo}/git/matching-refs/{ref}"],updateRef:["PATCH /repos/{owner}/{repo}/git/refs/{ref}"]},gitignore:{getAllTemplates:["GET /gitignore/templates"],getTemplate:["GET /gitignore/templates/{name}"]},interactions:{getRestrictionsForAuthenticatedUser:["GET /user/interaction-limits"],getRestrictionsForOrg:["GET /orgs/{org}/interaction-limits"],getRestrictionsForRepo:["GET /repos/{owner}/{repo}/interaction-limits"],getRestrictionsForYourPublicRepos:["GET /user/interaction-limits",{},{renamed:["interactions","getRestrictionsForAuthenticatedUser"]}],removeRestrictionsForAuthenticatedUser:["DELETE /user/interaction-limits"],removeRestrictionsForOrg:["DELETE /orgs/{org}/interaction-limits"],removeRestrictionsForRepo:["DELETE /repos/{owner}/{repo}/interaction-limits"],removeRestrictionsForYourPublicRepos:["DELETE /user/interaction-limits",{},{renamed:["interactions","removeRestrictionsForAuthenticatedUser"]}],setRestrictionsForAuthenticatedUser:["PUT /user/interaction-limits"],setRestrictionsForOrg:["PUT /orgs/{org}/interaction-limits"],setRestrictionsForRepo:["PUT /repos/{owner}/{repo}/interaction-limits"],setRestrictionsForYourPublicRepos:["PUT /user/interaction-limits",{},{renamed:["interactions","setRestrictionsForAuthenticatedUser"]}]},issues:{addAssignees:["POST /repos/{owner}/{repo}/issues/{issue_number}/assignees"],addLabels:["POST /repos/{owner}/{repo}/issues/{issue_number}/labels"],checkUserCanBeAssigned:["GET /repos/{owner}/{repo}/assignees/{assignee}"],create:["POST /repos/{owner}/{repo}/issues"],createComment:["POST /repos/{owner}/{repo}/issues/{issue_number}/comments"],createLabel:["POST /repos/{owner}/{repo}/labels"],createMilestone:["POST /repos/{owner}/{repo}/milestones"],deleteComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}"],deleteLabel:["DELETE /repos/{owner}/{repo}/labels/{name}"],deleteMilestone:["DELETE /repos/{owner}/{repo}/milestones/{milestone_number}"],get:["GET /repos/{owner}/{repo}/issues/{issue_number}"],getComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}"],getEvent:["GET /repos/{owner}/{repo}/issues/events/{event_id}"],getLabel:["GET /repos/{owner}/{repo}/labels/{name}"],getMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}"],list:["GET /issues"],listAssignees:["GET /repos/{owner}/{repo}/assignees"],listComments:["GET /repos/{owner}/{repo}/issues/{issue_number}/comments"],listCommentsForRepo:["GET /repos/{owner}/{repo}/issues/comments"],listEvents:["GET /repos/{owner}/{repo}/issues/{issue_number}/events"],listEventsForRepo:["GET /repos/{owner}/{repo}/issues/events"],listEventsForTimeline:["GET /repos/{owner}/{repo}/issues/{issue_number}/timeline",{mediaType:{previews:["mockingbird"]}}],listForAuthenticatedUser:["GET /user/issues"],listForOrg:["GET /orgs/{org}/issues"],listForRepo:["GET /repos/{owner}/{repo}/issues"],listLabelsForMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels"],listLabelsForRepo:["GET /repos/{owner}/{repo}/labels"],listLabelsOnIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/labels"],listMilestones:["GET /repos/{owner}/{repo}/milestones"],lock:["PUT /repos/{owner}/{repo}/issues/{issue_number}/lock"],removeAllLabels:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels"],removeAssignees:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees"],removeLabel:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}"],setLabels:["PUT /repos/{owner}/{repo}/issues/{issue_number}/labels"],unlock:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock"],update:["PATCH /repos/{owner}/{repo}/issues/{issue_number}"],updateComment:["PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}"],updateLabel:["PATCH /repos/{owner}/{repo}/labels/{name}"],updateMilestone:["PATCH /repos/{owner}/{repo}/milestones/{milestone_number}"]},licenses:{get:["GET /licenses/{license}"],getAllCommonlyUsed:["GET /licenses"],getForRepo:["GET /repos/{owner}/{repo}/license"]},markdown:{render:["POST /markdown"],renderRaw:["POST /markdown/raw",{headers:{"content-type":"text/plain; charset=utf-8"}}]},meta:{get:["GET /meta"],getOctocat:["GET /octocat"],getZen:["GET /zen"],root:["GET /"]},migrations:{cancelImport:["DELETE /repos/{owner}/{repo}/import"],deleteArchiveForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],deleteArchiveForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],downloadArchiveForOrg:["GET /orgs/{org}/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],getArchiveForAuthenticatedUser:["GET /user/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],getCommitAuthors:["GET /repos/{owner}/{repo}/import/authors"],getImportStatus:["GET /repos/{owner}/{repo}/import"],getLargeFiles:["GET /repos/{owner}/{repo}/import/large_files"],getStatusForAuthenticatedUser:["GET /user/migrations/{migration_id}",{mediaType:{previews:["wyandotte"]}}],getStatusForOrg:["GET /orgs/{org}/migrations/{migration_id}",{mediaType:{previews:["wyandotte"]}}],listForAuthenticatedUser:["GET /user/migrations",{mediaType:{previews:["wyandotte"]}}],listForOrg:["GET /orgs/{org}/migrations",{mediaType:{previews:["wyandotte"]}}],listReposForOrg:["GET /orgs/{org}/migrations/{migration_id}/repositories",{mediaType:{previews:["wyandotte"]}}],listReposForUser:["GET /user/migrations/{migration_id}/repositories",{mediaType:{previews:["wyandotte"]}}],mapCommitAuthor:["PATCH /repos/{owner}/{repo}/import/authors/{author_id}"],setLfsPreference:["PATCH /repos/{owner}/{repo}/import/lfs"],startForAuthenticatedUser:["POST /user/migrations"],startForOrg:["POST /orgs/{org}/migrations"],startImport:["PUT /repos/{owner}/{repo}/import"],unlockRepoForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock",{mediaType:{previews:["wyandotte"]}}],unlockRepoForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock",{mediaType:{previews:["wyandotte"]}}],updateImport:["PATCH /repos/{owner}/{repo}/import"]},orgs:{blockUser:["PUT /orgs/{org}/blocks/{username}"],cancelInvitation:["DELETE /orgs/{org}/invitations/{invitation_id}"],checkBlockedUser:["GET /orgs/{org}/blocks/{username}"],checkMembershipForUser:["GET /orgs/{org}/members/{username}"],checkPublicMembershipForUser:["GET /orgs/{org}/public_members/{username}"],convertMemberToOutsideCollaborator:["PUT /orgs/{org}/outside_collaborators/{username}"],createInvitation:["POST /orgs/{org}/invitations"],createWebhook:["POST /orgs/{org}/hooks"],deleteWebhook:["DELETE /orgs/{org}/hooks/{hook_id}"],get:["GET /orgs/{org}"],getMembershipForAuthenticatedUser:["GET /user/memberships/orgs/{org}"],getMembershipForUser:["GET /orgs/{org}/memberships/{username}"],getWebhook:["GET /orgs/{org}/hooks/{hook_id}"],getWebhookConfigForOrg:["GET /orgs/{org}/hooks/{hook_id}/config"],getWebhookDelivery:["GET /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}"],list:["GET /organizations"],listAppInstallations:["GET /orgs/{org}/installations"],listBlockedUsers:["GET /orgs/{org}/blocks"],listFailedInvitations:["GET /orgs/{org}/failed_invitations"],listForAuthenticatedUser:["GET /user/orgs"],listForUser:["GET /users/{username}/orgs"],listInvitationTeams:["GET /orgs/{org}/invitations/{invitation_id}/teams"],listMembers:["GET /orgs/{org}/members"],listMembershipsForAuthenticatedUser:["GET /user/memberships/orgs"],listOutsideCollaborators:["GET /orgs/{org}/outside_collaborators"],listPendingInvitations:["GET /orgs/{org}/invitations"],listPublicMembers:["GET /orgs/{org}/public_members"],listWebhookDeliveries:["GET /orgs/{org}/hooks/{hook_id}/deliveries"],listWebhooks:["GET /orgs/{org}/hooks"],pingWebhook:["POST /orgs/{org}/hooks/{hook_id}/pings"],redeliverWebhookDelivery:["POST /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],removeMember:["DELETE /orgs/{org}/members/{username}"],removeMembershipForUser:["DELETE /orgs/{org}/memberships/{username}"],removeOutsideCollaborator:["DELETE /orgs/{org}/outside_collaborators/{username}"],removePublicMembershipForAuthenticatedUser:["DELETE /orgs/{org}/public_members/{username}"],setMembershipForUser:["PUT /orgs/{org}/memberships/{username}"],setPublicMembershipForAuthenticatedUser:["PUT /orgs/{org}/public_members/{username}"],unblockUser:["DELETE /orgs/{org}/blocks/{username}"],update:["PATCH /orgs/{org}"],updateMembershipForAuthenticatedUser:["PATCH /user/memberships/orgs/{org}"],updateWebhook:["PATCH /orgs/{org}/hooks/{hook_id}"],updateWebhookConfigForOrg:["PATCH /orgs/{org}/hooks/{hook_id}/config"]},packages:{deletePackageForAuthenticatedUser:["DELETE /user/packages/{package_type}/{package_name}"],deletePackageForOrg:["DELETE /orgs/{org}/packages/{package_type}/{package_name}"],deletePackageVersionForAuthenticatedUser:["DELETE /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],deletePackageVersionForOrg:["DELETE /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],getAllPackageVersionsForAPackageOwnedByAnOrg:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions",{},{renamed:["packages","getAllPackageVersionsForPackageOwnedByOrg"]}],getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions",{},{renamed:["packages","getAllPackageVersionsForPackageOwnedByAuthenticatedUser"]}],getAllPackageVersionsForPackageOwnedByAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions"],getAllPackageVersionsForPackageOwnedByOrg:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions"],getAllPackageVersionsForPackageOwnedByUser:["GET /users/{username}/packages/{package_type}/{package_name}/versions"],getPackageForAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}"],getPackageForOrganization:["GET /orgs/{org}/packages/{package_type}/{package_name}"],getPackageForUser:["GET /users/{username}/packages/{package_type}/{package_name}"],getPackageVersionForAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],getPackageVersionForOrganization:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],getPackageVersionForUser:["GET /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],restorePackageForAuthenticatedUser:["POST /user/packages/{package_type}/{package_name}/restore{?token}"],restorePackageForOrg:["POST /orgs/{org}/packages/{package_type}/{package_name}/restore{?token}"],restorePackageVersionForAuthenticatedUser:["POST /user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],restorePackageVersionForOrg:["POST /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"]},projects:{addCollaborator:["PUT /projects/{project_id}/collaborators/{username}",{mediaType:{previews:["inertia"]}}],createCard:["POST /projects/columns/{column_id}/cards",{mediaType:{previews:["inertia"]}}],createColumn:["POST /projects/{project_id}/columns",{mediaType:{previews:["inertia"]}}],createForAuthenticatedUser:["POST /user/projects",{mediaType:{previews:["inertia"]}}],createForOrg:["POST /orgs/{org}/projects",{mediaType:{previews:["inertia"]}}],createForRepo:["POST /repos/{owner}/{repo}/projects",{mediaType:{previews:["inertia"]}}],delete:["DELETE /projects/{project_id}",{mediaType:{previews:["inertia"]}}],deleteCard:["DELETE /projects/columns/cards/{card_id}",{mediaType:{previews:["inertia"]}}],deleteColumn:["DELETE /projects/columns/{column_id}",{mediaType:{previews:["inertia"]}}],get:["GET /projects/{project_id}",{mediaType:{previews:["inertia"]}}],getCard:["GET /projects/columns/cards/{card_id}",{mediaType:{previews:["inertia"]}}],getColumn:["GET /projects/columns/{column_id}",{mediaType:{previews:["inertia"]}}],getPermissionForUser:["GET /projects/{project_id}/collaborators/{username}/permission",{mediaType:{previews:["inertia"]}}],listCards:["GET /projects/columns/{column_id}/cards",{mediaType:{previews:["inertia"]}}],listCollaborators:["GET /projects/{project_id}/collaborators",{mediaType:{previews:["inertia"]}}],listColumns:["GET /projects/{project_id}/columns",{mediaType:{previews:["inertia"]}}],listForOrg:["GET /orgs/{org}/projects",{mediaType:{previews:["inertia"]}}],listForRepo:["GET /repos/{owner}/{repo}/projects",{mediaType:{previews:["inertia"]}}],listForUser:["GET /users/{username}/projects",{mediaType:{previews:["inertia"]}}],moveCard:["POST /projects/columns/cards/{card_id}/moves",{mediaType:{previews:["inertia"]}}],moveColumn:["POST /projects/columns/{column_id}/moves",{mediaType:{previews:["inertia"]}}],removeCollaborator:["DELETE /projects/{project_id}/collaborators/{username}",{mediaType:{previews:["inertia"]}}],update:["PATCH /projects/{project_id}",{mediaType:{previews:["inertia"]}}],updateCard:["PATCH /projects/columns/cards/{card_id}",{mediaType:{previews:["inertia"]}}],updateColumn:["PATCH /projects/columns/{column_id}",{mediaType:{previews:["inertia"]}}]},pulls:{checkIfMerged:["GET /repos/{owner}/{repo}/pulls/{pull_number}/merge"],create:["POST /repos/{owner}/{repo}/pulls"],createReplyForReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies"],createReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],createReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments"],deletePendingReview:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],deleteReviewComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}"],dismissReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals"],get:["GET /repos/{owner}/{repo}/pulls/{pull_number}"],getReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],getReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}"],list:["GET /repos/{owner}/{repo}/pulls"],listCommentsForReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments"],listCommits:["GET /repos/{owner}/{repo}/pulls/{pull_number}/commits"],listFiles:["GET /repos/{owner}/{repo}/pulls/{pull_number}/files"],listRequestedReviewers:["GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],listReviewComments:["GET /repos/{owner}/{repo}/pulls/{pull_number}/comments"],listReviewCommentsForRepo:["GET /repos/{owner}/{repo}/pulls/comments"],listReviews:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],merge:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge"],removeRequestedReviewers:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],requestReviewers:["POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],submitReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events"],update:["PATCH /repos/{owner}/{repo}/pulls/{pull_number}"],updateBranch:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch",{mediaType:{previews:["lydian"]}}],updateReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],updateReviewComment:["PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}"]},rateLimit:{get:["GET /rate_limit"]},reactions:{createForCommitComment:["POST /repos/{owner}/{repo}/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForIssue:["POST /repos/{owner}/{repo}/issues/{issue_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForIssueComment:["POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForPullRequestReviewComment:["POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForRelease:["POST /repos/{owner}/{repo}/releases/{release_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForTeamDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForTeamDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],deleteForCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForIssue:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForIssueComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForPullRequestComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForTeamDiscussion:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForTeamDiscussionComment:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteLegacy:["DELETE /reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}},{deprecated:"octokit.rest.reactions.deleteLegacy() is deprecated, see https://docs.github.com/rest/reference/reactions/#delete-a-reaction-legacy"}],listForCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForIssueComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForPullRequestReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForTeamDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForTeamDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}]},repos:{acceptInvitation:["PATCH /user/repository_invitations/{invitation_id}"],addAppAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],addCollaborator:["PUT /repos/{owner}/{repo}/collaborators/{username}"],addStatusCheckContexts:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],addTeamAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],addUserAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],checkCollaborator:["GET /repos/{owner}/{repo}/collaborators/{username}"],checkVulnerabilityAlerts:["GET /repos/{owner}/{repo}/vulnerability-alerts",{mediaType:{previews:["dorian"]}}],compareCommits:["GET /repos/{owner}/{repo}/compare/{base}...{head}"],compareCommitsWithBasehead:["GET /repos/{owner}/{repo}/compare/{basehead}"],createAutolink:["POST /repos/{owner}/{repo}/autolinks"],createCommitComment:["POST /repos/{owner}/{repo}/commits/{commit_sha}/comments"],createCommitSignatureProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",{mediaType:{previews:["zzzax"]}}],createCommitStatus:["POST /repos/{owner}/{repo}/statuses/{sha}"],createDeployKey:["POST /repos/{owner}/{repo}/keys"],createDeployment:["POST /repos/{owner}/{repo}/deployments"],createDeploymentStatus:["POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],createDispatchEvent:["POST /repos/{owner}/{repo}/dispatches"],createForAuthenticatedUser:["POST /user/repos"],createFork:["POST /repos/{owner}/{repo}/forks"],createInOrg:["POST /orgs/{org}/repos"],createOrUpdateEnvironment:["PUT /repos/{owner}/{repo}/environments/{environment_name}"],createOrUpdateFileContents:["PUT /repos/{owner}/{repo}/contents/{path}"],createPagesSite:["POST /repos/{owner}/{repo}/pages",{mediaType:{previews:["switcheroo"]}}],createRelease:["POST /repos/{owner}/{repo}/releases"],createUsingTemplate:["POST /repos/{template_owner}/{template_repo}/generate",{mediaType:{previews:["baptiste"]}}],createWebhook:["POST /repos/{owner}/{repo}/hooks"],declineInvitation:["DELETE /user/repository_invitations/{invitation_id}"],delete:["DELETE /repos/{owner}/{repo}"],deleteAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],deleteAdminBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],deleteAnEnvironment:["DELETE /repos/{owner}/{repo}/environments/{environment_name}"],deleteAutolink:["DELETE /repos/{owner}/{repo}/autolinks/{autolink_id}"],deleteBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection"],deleteCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}"],deleteCommitSignatureProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",{mediaType:{previews:["zzzax"]}}],deleteDeployKey:["DELETE /repos/{owner}/{repo}/keys/{key_id}"],deleteDeployment:["DELETE /repos/{owner}/{repo}/deployments/{deployment_id}"],deleteFile:["DELETE /repos/{owner}/{repo}/contents/{path}"],deleteInvitation:["DELETE /repos/{owner}/{repo}/invitations/{invitation_id}"],deletePagesSite:["DELETE /repos/{owner}/{repo}/pages",{mediaType:{previews:["switcheroo"]}}],deletePullRequestReviewProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],deleteRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}"],deleteReleaseAsset:["DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}"],deleteWebhook:["DELETE /repos/{owner}/{repo}/hooks/{hook_id}"],disableAutomatedSecurityFixes:["DELETE /repos/{owner}/{repo}/automated-security-fixes",{mediaType:{previews:["london"]}}],disableVulnerabilityAlerts:["DELETE /repos/{owner}/{repo}/vulnerability-alerts",{mediaType:{previews:["dorian"]}}],downloadArchive:["GET /repos/{owner}/{repo}/zipball/{ref}",{},{renamed:["repos","downloadZipballArchive"]}],downloadTarballArchive:["GET /repos/{owner}/{repo}/tarball/{ref}"],downloadZipballArchive:["GET /repos/{owner}/{repo}/zipball/{ref}"],enableAutomatedSecurityFixes:["PUT /repos/{owner}/{repo}/automated-security-fixes",{mediaType:{previews:["london"]}}],enableVulnerabilityAlerts:["PUT /repos/{owner}/{repo}/vulnerability-alerts",{mediaType:{previews:["dorian"]}}],get:["GET /repos/{owner}/{repo}"],getAccessRestrictions:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],getAdminBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],getAllEnvironments:["GET /repos/{owner}/{repo}/environments"],getAllStatusCheckContexts:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts"],getAllTopics:["GET /repos/{owner}/{repo}/topics",{mediaType:{previews:["mercy"]}}],getAppsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps"],getAutolink:["GET /repos/{owner}/{repo}/autolinks/{autolink_id}"],getBranch:["GET /repos/{owner}/{repo}/branches/{branch}"],getBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection"],getClones:["GET /repos/{owner}/{repo}/traffic/clones"],getCodeFrequencyStats:["GET /repos/{owner}/{repo}/stats/code_frequency"],getCollaboratorPermissionLevel:["GET /repos/{owner}/{repo}/collaborators/{username}/permission"],getCombinedStatusForRef:["GET /repos/{owner}/{repo}/commits/{ref}/status"],getCommit:["GET /repos/{owner}/{repo}/commits/{ref}"],getCommitActivityStats:["GET /repos/{owner}/{repo}/stats/commit_activity"],getCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}"],getCommitSignatureProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",{mediaType:{previews:["zzzax"]}}],getCommunityProfileMetrics:["GET /repos/{owner}/{repo}/community/profile"],getContent:["GET /repos/{owner}/{repo}/contents/{path}"],getContributorsStats:["GET /repos/{owner}/{repo}/stats/contributors"],getDeployKey:["GET /repos/{owner}/{repo}/keys/{key_id}"],getDeployment:["GET /repos/{owner}/{repo}/deployments/{deployment_id}"],getDeploymentStatus:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}"],getEnvironment:["GET /repos/{owner}/{repo}/environments/{environment_name}"],getLatestPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/latest"],getLatestRelease:["GET /repos/{owner}/{repo}/releases/latest"],getPages:["GET /repos/{owner}/{repo}/pages"],getPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/{build_id}"],getPagesHealthCheck:["GET /repos/{owner}/{repo}/pages/health"],getParticipationStats:["GET /repos/{owner}/{repo}/stats/participation"],getPullRequestReviewProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],getPunchCardStats:["GET /repos/{owner}/{repo}/stats/punch_card"],getReadme:["GET /repos/{owner}/{repo}/readme"],getReadmeInDirectory:["GET /repos/{owner}/{repo}/readme/{dir}"],getRelease:["GET /repos/{owner}/{repo}/releases/{release_id}"],getReleaseAsset:["GET /repos/{owner}/{repo}/releases/assets/{asset_id}"],getReleaseByTag:["GET /repos/{owner}/{repo}/releases/tags/{tag}"],getStatusChecksProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],getTeamsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams"],getTopPaths:["GET /repos/{owner}/{repo}/traffic/popular/paths"],getTopReferrers:["GET /repos/{owner}/{repo}/traffic/popular/referrers"],getUsersWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users"],getViews:["GET /repos/{owner}/{repo}/traffic/views"],getWebhook:["GET /repos/{owner}/{repo}/hooks/{hook_id}"],getWebhookConfigForRepo:["GET /repos/{owner}/{repo}/hooks/{hook_id}/config"],getWebhookDelivery:["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}"],listAutolinks:["GET /repos/{owner}/{repo}/autolinks"],listBranches:["GET /repos/{owner}/{repo}/branches"],listBranchesForHeadCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head",{mediaType:{previews:["groot"]}}],listCollaborators:["GET /repos/{owner}/{repo}/collaborators"],listCommentsForCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/comments"],listCommitCommentsForRepo:["GET /repos/{owner}/{repo}/comments"],listCommitStatusesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/statuses"],listCommits:["GET /repos/{owner}/{repo}/commits"],listContributors:["GET /repos/{owner}/{repo}/contributors"],listDeployKeys:["GET /repos/{owner}/{repo}/keys"],listDeploymentStatuses:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],listDeployments:["GET /repos/{owner}/{repo}/deployments"],listForAuthenticatedUser:["GET /user/repos"],listForOrg:["GET /orgs/{org}/repos"],listForUser:["GET /users/{username}/repos"],listForks:["GET /repos/{owner}/{repo}/forks"],listInvitations:["GET /repos/{owner}/{repo}/invitations"],listInvitationsForAuthenticatedUser:["GET /user/repository_invitations"],listLanguages:["GET /repos/{owner}/{repo}/languages"],listPagesBuilds:["GET /repos/{owner}/{repo}/pages/builds"],listPublic:["GET /repositories"],listPullRequestsAssociatedWithCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls",{mediaType:{previews:["groot"]}}],listReleaseAssets:["GET /repos/{owner}/{repo}/releases/{release_id}/assets"],listReleases:["GET /repos/{owner}/{repo}/releases"],listTags:["GET /repos/{owner}/{repo}/tags"],listTeams:["GET /repos/{owner}/{repo}/teams"],listWebhookDeliveries:["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries"],listWebhooks:["GET /repos/{owner}/{repo}/hooks"],merge:["POST /repos/{owner}/{repo}/merges"],pingWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/pings"],redeliverWebhookDelivery:["POST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],removeAppAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],removeCollaborator:["DELETE /repos/{owner}/{repo}/collaborators/{username}"],removeStatusCheckContexts:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],removeStatusCheckProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],removeTeamAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],removeUserAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],renameBranch:["POST /repos/{owner}/{repo}/branches/{branch}/rename"],replaceAllTopics:["PUT /repos/{owner}/{repo}/topics",{mediaType:{previews:["mercy"]}}],requestPagesBuild:["POST /repos/{owner}/{repo}/pages/builds"],setAdminBranchProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],setAppAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],setStatusCheckContexts:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],setTeamAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],setUserAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],testPushWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/tests"],transfer:["POST /repos/{owner}/{repo}/transfer"],update:["PATCH /repos/{owner}/{repo}"],updateBranchProtection:["PUT /repos/{owner}/{repo}/branches/{branch}/protection"],updateCommitComment:["PATCH /repos/{owner}/{repo}/comments/{comment_id}"],updateInformationAboutPagesSite:["PUT /repos/{owner}/{repo}/pages"],updateInvitation:["PATCH /repos/{owner}/{repo}/invitations/{invitation_id}"],updatePullRequestReviewProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],updateRelease:["PATCH /repos/{owner}/{repo}/releases/{release_id}"],updateReleaseAsset:["PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}"],updateStatusCheckPotection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",{},{renamed:["repos","updateStatusCheckProtection"]}],updateStatusCheckProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],updateWebhook:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}"],updateWebhookConfigForRepo:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}/config"],uploadReleaseAsset:["POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}",{baseUrl:"https://uploads.github.com"}]},search:{code:["GET /search/code"],commits:["GET /search/commits",{mediaType:{previews:["cloak"]}}],issuesAndPullRequests:["GET /search/issues"],labels:["GET /search/labels"],repos:["GET /search/repositories"],topics:["GET /search/topics",{mediaType:{previews:["mercy"]}}],users:["GET /search/users"]},secretScanning:{getAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"],listAlertsForRepo:["GET /repos/{owner}/{repo}/secret-scanning/alerts"],updateAlert:["PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"]},teams:{addOrUpdateMembershipForUserInOrg:["PUT /orgs/{org}/teams/{team_slug}/memberships/{username}"],addOrUpdateProjectPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}",{mediaType:{previews:["inertia"]}}],addOrUpdateRepoPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],checkPermissionsForProjectInOrg:["GET /orgs/{org}/teams/{team_slug}/projects/{project_id}",{mediaType:{previews:["inertia"]}}],checkPermissionsForRepoInOrg:["GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],create:["POST /orgs/{org}/teams"],createDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],createDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions"],deleteDiscussionCommentInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],deleteDiscussionInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],deleteInOrg:["DELETE /orgs/{org}/teams/{team_slug}"],getByName:["GET /orgs/{org}/teams/{team_slug}"],getDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],getDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],getMembershipForUserInOrg:["GET /orgs/{org}/teams/{team_slug}/memberships/{username}"],list:["GET /orgs/{org}/teams"],listChildInOrg:["GET /orgs/{org}/teams/{team_slug}/teams"],listDiscussionCommentsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],listDiscussionsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions"],listForAuthenticatedUser:["GET /user/teams"],listMembersInOrg:["GET /orgs/{org}/teams/{team_slug}/members"],listPendingInvitationsInOrg:["GET /orgs/{org}/teams/{team_slug}/invitations"],listProjectsInOrg:["GET /orgs/{org}/teams/{team_slug}/projects",{mediaType:{previews:["inertia"]}}],listReposInOrg:["GET /orgs/{org}/teams/{team_slug}/repos"],removeMembershipForUserInOrg:["DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}"],removeProjectInOrg:["DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}"],removeRepoInOrg:["DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],updateDiscussionCommentInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],updateDiscussionInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],updateInOrg:["PATCH /orgs/{org}/teams/{team_slug}"]},users:{addEmailForAuthenticated:["POST /user/emails"],block:["PUT /user/blocks/{username}"],checkBlocked:["GET /user/blocks/{username}"],checkFollowingForUser:["GET /users/{username}/following/{target_user}"],checkPersonIsFollowedByAuthenticated:["GET /user/following/{username}"],createGpgKeyForAuthenticated:["POST /user/gpg_keys"],createPublicSshKeyForAuthenticated:["POST /user/keys"],deleteEmailForAuthenticated:["DELETE /user/emails"],deleteGpgKeyForAuthenticated:["DELETE /user/gpg_keys/{gpg_key_id}"],deletePublicSshKeyForAuthenticated:["DELETE /user/keys/{key_id}"],follow:["PUT /user/following/{username}"],getAuthenticated:["GET /user"],getByUsername:["GET /users/{username}"],getContextForUser:["GET /users/{username}/hovercard"],getGpgKeyForAuthenticated:["GET /user/gpg_keys/{gpg_key_id}"],getPublicSshKeyForAuthenticated:["GET /user/keys/{key_id}"],list:["GET /users"],listBlockedByAuthenticated:["GET /user/blocks"],listEmailsForAuthenticated:["GET /user/emails"],listFollowedByAuthenticated:["GET /user/following"],listFollowersForAuthenticatedUser:["GET /user/followers"],listFollowersForUser:["GET /users/{username}/followers"],listFollowingForUser:["GET /users/{username}/following"],listGpgKeysForAuthenticated:["GET /user/gpg_keys"],listGpgKeysForUser:["GET /users/{username}/gpg_keys"],listPublicEmailsForAuthenticated:["GET /user/public_emails"],listPublicKeysForUser:["GET /users/{username}/keys"],listPublicSshKeysForAuthenticated:["GET /user/keys"],setPrimaryEmailVisibilityForAuthenticated:["PATCH /user/email/visibility"],unblock:["DELETE /user/blocks/{username}"],unfollow:["DELETE /user/following/{username}"],updateAuthenticated:["PATCH /user"]}},Vt="5.8.0";function Kt(e,r){let t={};for(let[s,o]of Object.entries(r))for(let[n,i]of Object.entries(o)){let[a,c,u]=i,[l,d]=a.split(/ /),m=Object.assign({method:l,url:d},c);t[s]||(t[s]={});let b=t[s];if(u){b[n]=Ln(e,s,n,m,u);continue}b[n]=e.request.defaults(m)}return t}function Ln(e,r,t,s,o){let n=e.request.defaults(s);function i(...a){let c=n.endpoint.merge(...a);if(o.mapToData)return c=Object.assign({},c,{data:c[o.mapToData],[o.mapToData]:void 0}),n(c);if(o.renamed){let[u,l]=o.renamed;e.log.warn(`octokit.${r}.${t}() has been renamed to octokit.${u}.${l}()`)}if(o.deprecated&&e.log.warn(o.deprecated),o.renamedParameters){let u=n.endpoint.merge(...a);for(let[l,d]of Object.entries(o.renamedParameters))l in u&&(e.log.warn(`"${l}" parameter is deprecated for "octokit.${r}.${t}()". Use "${d}" instead`),d in u||(u[d]=u[l]),delete u[l]);return n(u)}return n(...a)}return Object.assign(i,n)}function Jt(e){return{rest:Kt(e,Wt)}}Jt.VERSION=Vt;function Yt(e){let r=Kt(e,Wt);return zt(zt({},r),{},{rest:r})}Yt.VERSION=Vt;ke.legacyRestEndpointMethods=Yt;ke.restEndpointMethods=Jt});var os=g(se=>{"use strict";Object.defineProperty(se,"__esModule",{value:!0});var In="2.15.1";function Xt(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);r&&(s=s.filter(function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable})),t.push.apply(t,s)}return t}function Qt(e){for(var r=1;r<arguments.length;r++){var t=arguments[r]!=null?arguments[r]:{};r%2?Xt(Object(t),!0).forEach(function(s){Bn(e,s,t[s])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):Xt(Object(t)).forEach(function(s){Object.defineProperty(e,s,Object.getOwnPropertyDescriptor(t,s))})}return e}function Bn(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function xn(e){if(!e.data)return Qt(Qt({},e),{},{data:[]});if(!("total_count"in e.data&&!("url"in e.data)))return e;let t=e.data.incomplete_results,s=e.data.repository_selection,o=e.data.total_count;delete e.data.incomplete_results,delete e.data.repository_selection,delete e.data.total_count;let n=Object.keys(e.data)[0],i=e.data[n];return e.data=i,typeof t!="undefined"&&(e.data.incomplete_results=t),typeof s!="undefined"&&(e.data.repository_selection=s),e.data.total_count=o,e}function cr(e,r,t){let s=typeof r=="function"?r.endpoint(t):e.request.endpoint(r,t),o=typeof r=="function"?r:e.request,n=s.method,i=s.headers,a=s.url;return{[Symbol.asyncIterator]:()=>({async next(){if(!a)return{done:!0};try{let c=await o({method:n,url:a,headers:i}),u=xn(c);return a=((u.headers.link||"").match(/<([^>]+)>;\s*rel="next"/)||[])[1],{value:u}}catch(c){if(c.status!==409)throw c;return a="",{value:{status:200,headers:{},data:[]}}}}})}}function es(e,r,t,s){return typeof t=="function"&&(s=t,t=void 0),rs(e,[],cr(e,r,t)[Symbol.asyncIterator](),s)}function rs(e,r,t,s){return t.next().then(o=>{if(o.done)return r;let n=!1;function i(){n=!0}return r=r.concat(s?s(o.value,i):o.value.data),n?r:rs(e,r,t,s)})}var $n=Object.assign(es,{iterator:cr}),ts=["GET /app/hook/deliveries","GET /app/installations","GET /applications/grants","GET /authorizations","GET /enterprises/{enterprise}/actions/permissions/organizations","GET /enterprises/{enterprise}/actions/runner-groups","GET /enterprises/{enterprise}/actions/runner-groups/{runner_group_id}/organizations","GET /enterprises/{enterprise}/actions/runner-groups/{runner_group_id}/runners","GET /enterprises/{enterprise}/actions/runners","GET /enterprises/{enterprise}/actions/runners/downloads","GET /events","GET /gists","GET /gists/public","GET /gists/starred","GET /gists/{gist_id}/comments","GET /gists/{gist_id}/commits","GET /gists/{gist_id}/forks","GET /installation/repositories","GET /issues","GET /marketplace_listing/plans","GET /marketplace_listing/plans/{plan_id}/accounts","GET /marketplace_listing/stubbed/plans","GET /marketplace_listing/stubbed/plans/{plan_id}/accounts","GET /networks/{owner}/{repo}/events","GET /notifications","GET /organizations","GET /orgs/{org}/actions/permissions/repositories","GET /orgs/{org}/actions/runner-groups","GET /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories","GET /orgs/{org}/actions/runner-groups/{runner_group_id}/runners","GET /orgs/{org}/actions/runners","GET /orgs/{org}/actions/runners/downloads","GET /orgs/{org}/actions/secrets","GET /orgs/{org}/actions/secrets/{secret_name}/repositories","GET /orgs/{org}/blocks","GET /orgs/{org}/credential-authorizations","GET /orgs/{org}/events","GET /orgs/{org}/failed_invitations","GET /orgs/{org}/hooks","GET /orgs/{org}/hooks/{hook_id}/deliveries","GET /orgs/{org}/installations","GET /orgs/{org}/invitations","GET /orgs/{org}/invitations/{invitation_id}/teams","GET /orgs/{org}/issues","GET /orgs/{org}/members","GET /orgs/{org}/migrations","GET /orgs/{org}/migrations/{migration_id}/repositories","GET /orgs/{org}/outside_collaborators","GET /orgs/{org}/projects","GET /orgs/{org}/public_members","GET /orgs/{org}/repos","GET /orgs/{org}/team-sync/groups","GET /orgs/{org}/teams","GET /orgs/{org}/teams/{team_slug}/discussions","GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments","GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions","GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions","GET /orgs/{org}/teams/{team_slug}/invitations","GET /orgs/{org}/teams/{team_slug}/members","GET /orgs/{org}/teams/{team_slug}/projects","GET /orgs/{org}/teams/{team_slug}/repos","GET /orgs/{org}/teams/{team_slug}/team-sync/group-mappings","GET /orgs/{org}/teams/{team_slug}/teams","GET /projects/columns/{column_id}/cards","GET /projects/{project_id}/collaborators","GET /projects/{project_id}/columns","GET /repos/{owner}/{repo}/actions/artifacts","GET /repos/{owner}/{repo}/actions/runners","GET /repos/{owner}/{repo}/actions/runners/downloads","GET /repos/{owner}/{repo}/actions/runs","GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts","GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs","GET /repos/{owner}/{repo}/actions/secrets","GET /repos/{owner}/{repo}/actions/workflows","GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs","GET /repos/{owner}/{repo}/assignees","GET /repos/{owner}/{repo}/autolinks","GET /repos/{owner}/{repo}/branches","GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations","GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs","GET /repos/{owner}/{repo}/code-scanning/alerts","GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances","GET /repos/{owner}/{repo}/code-scanning/analyses","GET /repos/{owner}/{repo}/collaborators","GET /repos/{owner}/{repo}/comments","GET /repos/{owner}/{repo}/comments/{comment_id}/reactions","GET /repos/{owner}/{repo}/commits","GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head","GET /repos/{owner}/{repo}/commits/{commit_sha}/comments","GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls","GET /repos/{owner}/{repo}/commits/{ref}/check-runs","GET /repos/{owner}/{repo}/commits/{ref}/check-suites","GET /repos/{owner}/{repo}/commits/{ref}/statuses","GET /repos/{owner}/{repo}/contributors","GET /repos/{owner}/{repo}/deployments","GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses","GET /repos/{owner}/{repo}/events","GET /repos/{owner}/{repo}/forks","GET /repos/{owner}/{repo}/git/matching-refs/{ref}","GET /repos/{owner}/{repo}/hooks","GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries","GET /repos/{owner}/{repo}/invitations","GET /repos/{owner}/{repo}/issues","GET /repos/{owner}/{repo}/issues/comments","GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions","GET /repos/{owner}/{repo}/issues/events","GET /repos/{owner}/{repo}/issues/{issue_number}/comments","GET /repos/{owner}/{repo}/issues/{issue_number}/events","GET /repos/{owner}/{repo}/issues/{issue_number}/labels","GET /repos/{owner}/{repo}/issues/{issue_number}/reactions","GET /repos/{owner}/{repo}/issues/{issue_number}/timeline","GET /repos/{owner}/{repo}/keys","GET /repos/{owner}/{repo}/labels","GET /repos/{owner}/{repo}/milestones","GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels","GET /repos/{owner}/{repo}/notifications","GET /repos/{owner}/{repo}/pages/builds","GET /repos/{owner}/{repo}/projects","GET /repos/{owner}/{repo}/pulls","GET /repos/{owner}/{repo}/pulls/comments","GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions","GET /repos/{owner}/{repo}/pulls/{pull_number}/comments","GET /repos/{owner}/{repo}/pulls/{pull_number}/commits","GET /repos/{owner}/{repo}/pulls/{pull_number}/files","GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers","GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews","GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments","GET /repos/{owner}/{repo}/releases","GET /repos/{owner}/{repo}/releases/{release_id}/assets","GET /repos/{owner}/{repo}/secret-scanning/alerts","GET /repos/{owner}/{repo}/stargazers","GET /repos/{owner}/{repo}/subscribers","GET /repos/{owner}/{repo}/tags","GET /repos/{owner}/{repo}/teams","GET /repositories","GET /repositories/{repository_id}/environments/{environment_name}/secrets","GET /scim/v2/enterprises/{enterprise}/Groups","GET /scim/v2/enterprises/{enterprise}/Users","GET /scim/v2/organizations/{org}/Users","GET /search/code","GET /search/commits","GET /search/issues","GET /search/labels","GET /search/repositories","GET /search/topics","GET /search/users","GET /teams/{team_id}/discussions","GET /teams/{team_id}/discussions/{discussion_number}/comments","GET /teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}/reactions","GET /teams/{team_id}/discussions/{discussion_number}/reactions","GET /teams/{team_id}/invitations","GET /teams/{team_id}/members","GET /teams/{team_id}/projects","GET /teams/{team_id}/repos","GET /teams/{team_id}/team-sync/group-mappings","GET /teams/{team_id}/teams","GET /user/blocks","GET /user/emails","GET /user/followers","GET /user/following","GET /user/gpg_keys","GET /user/installations","GET /user/installations/{installation_id}/repositories","GET /user/issues","GET /user/keys","GET /user/marketplace_purchases","GET /user/marketplace_purchases/stubbed","GET /user/memberships/orgs","GET /user/migrations","GET /user/migrations/{migration_id}/repositories","GET /user/orgs","GET /user/public_emails","GET /user/repos","GET /user/repository_invitations","GET /user/starred","GET /user/subscriptions","GET /user/teams","GET /users","GET /users/{username}/events","GET /users/{username}/events/orgs/{org}","GET /users/{username}/events/public","GET /users/{username}/followers","GET /users/{username}/following","GET /users/{username}/gists","GET /users/{username}/gpg_keys","GET /users/{username}/keys","GET /users/{username}/orgs","GET /users/{username}/projects","GET /users/{username}/received_events","GET /users/{username}/received_events/public","GET /users/{username}/repos","GET /users/{username}/starred","GET /users/{username}/subscriptions"];function Mn(e){return typeof e=="string"?ts.includes(e):!1}function ss(e){return{paginate:Object.assign(es.bind(null,e),{iterator:cr.bind(null,e)})}}ss.VERSION=In;se.composePaginateRest=$n;se.isPaginatingEndpoint=Mn;se.paginateRest=ss;se.paginatingEndpoints=ts});var as=g(v=>{"use strict";var Hn=v&&v.__createBinding||(Object.create?function(e,r,t,s){s===void 0&&(s=t),Object.defineProperty(e,s,{enumerable:!0,get:function(){return r[t]}})}:function(e,r,t,s){s===void 0&&(s=t),e[s]=r[t]}),Nn=v&&v.__setModuleDefault||(Object.create?function(e,r){Object.defineProperty(e,"default",{enumerable:!0,value:r})}:function(e,r){e.default=r}),ns=v&&v.__importStar||function(e){if(e&&e.__esModule)return e;var r={};if(e!=null)for(var t in e)t!=="default"&&Object.hasOwnProperty.call(e,t)&&Hn(r,e,t);return Nn(r,e),r};Object.defineProperty(v,"__esModule",{value:!0});v.getOctokitOptions=v.GitHub=v.context=void 0;var zn=ns(Ce()),ur=ns(Hr()),Wn=Ht(),Vn=Zt(),Kn=os();v.context=new zn.Context;var is=ur.getApiBaseUrl(),Jn={baseUrl:is,request:{agent:ur.getProxyAgent(is)}};v.GitHub=Wn.Octokit.plugin(Vn.restEndpointMethods,Kn.paginateRest).defaults(Jn);function Yn(e,r){let t=Object.assign({},r||{}),s=ur.getAuthString(e,t);return s&&(t.auth=s),t}v.getOctokitOptions=Yn});var us=g(R=>{"use strict";var Zn=R&&R.__createBinding||(Object.create?function(e,r,t,s){s===void 0&&(s=t),Object.defineProperty(e,s,{enumerable:!0,get:function(){return r[t]}})}:function(e,r,t,s){s===void 0&&(s=t),e[s]=r[t]}),Xn=R&&R.__setModuleDefault||(Object.create?function(e,r){Object.defineProperty(e,"default",{enumerable:!0,value:r})}:function(e,r){e.default=r}),Qn=R&&R.__importStar||function(e){if(e&&e.__esModule)return e;var r={};if(e!=null)for(var t in e)t!=="default"&&Object.hasOwnProperty.call(e,t)&&Zn(r,e,t);return Xn(r,e),r};Object.defineProperty(R,"__esModule",{value:!0});R.getOctokit=R.context=void 0;var ei=Qn(Ce()),cs=as();R.context=new ei.Context;function ri(e,r){return new cs.GitHub(cs.getOctokitOptions(e,r))}R.getOctokit=ri});var T=Re(Rr()),Ae=Re(us()),lr=Re(require("util"));ti();async function ti(){try{si("GITHUB_TOKEN","GITHUB_REPOSITORY");let e=Ae.default.getOctokit(process.env.GITHUB_TOKEN),{owner:r,repo:t}=Ae.default.context.repo,s={title:T.default.getInput("title"),body:T.default.getInput("body"),head:T.default.getInput("head").replace(/^refs\/heads\//,""),base:T.default.getInput("base").replace(/^refs\/heads\//,""),label:T.default.getInput("label",{required:!0}),draft:T.default.getInput("draft")==="true"};T.default.debug(`Inputs: ${(0,lr.inspect)(s)}`);let{data:o,error:n}=await oi(e,r,t,s.head,s.base,s.label);if(T.default.info(n?"Didn't find existing pull request, creating new.":"Found existing pull request, updating"),n){let{data:i}=await e.rest.repos.compareCommitsWithBasehead({owner:r,repo:t,basehead:`${s.base}...${s.head}`});if(i.total_commits<=0){T.default.info("No commits between base and head, cancelling operation");return}T.default.debug("Creating pull request");let a=await e.rest.pulls.create({owner:r,repo:t,title:s.title,body:s.body,head:s.head,base:s.base,draft:s.draft});o.id=a.data.id,o.number=a.data.number,T.default.debug("Adding label to pull request"),await e.rest.issues.addLabels({owner:r,repo:t,issue_number:o.number,labels:[s.label.trim()]})}else T.default.debug("Updating pull request"),await e.rest.pulls.update({owner:r,repo:t,pull_number:o.number,title:s.title,body:s.body});T.default.setOutput("id",o.id),T.default.setOutput("number",o.number)}catch(e){T.default.info((0,lr.inspect)(e)),T.default.setFailed(e==null?void 0:e.message)}}function si(...e){let r=!1;return e.forEach(t=>{process.env[t]==null&&(r=!0,T.default.setFailed(`${t} is not configured. Make sure you made it available to your action`))}),r}async function oi(e,r,t,s,o,n){var c;let i=`repo:${process.env.GITHUB_REPOSITORY} is:pr is:open head:${s} base:${o} label:"${n}"`;T.default.info(`Search query: ${i}`);let{data:a}=await e.rest.search.issuesAndPullRequests({q:i});if(a.total_count<=0){let{data:u}=await e.rest.repos.listPullRequestsAssociatedWithCommit({owner:r,repo:t,commit_sha:Ae.default.context.sha}),l=u.filter(d=>d.state==="closed"&&d.labels.find(m=>m.name===n)&&d.head.ref.replace(/^refs\/heads\//,"")===s&&d.base.ref.replace(/^refs\/heads\//,"")===o);return l.length>0&&((c=l[0])==null?void 0:c.number)!==void 0?{data:{id:l[0].id,number:l[0].number},error:!1}:{data:{id:void 0,number:void 0},error:!0}}return{data:{id:a.items[0].id,number:a.items[0].number},error:!1}}
/*!
 * is-plain-object <https://github.com/jonschlinkert/is-plain-object>
 *
 * Copyright (c) 2014-2017, Jon Schlinkert.
 * Released under the MIT License.
 */
